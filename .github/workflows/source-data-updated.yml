name: 'Updated: source-data'

on: repository_dispatch

jobs:
  setup:
    if: github.event.action == 'source-data-updated'
    runs-on: ubuntu-latest
    steps:
      - name: Determine configuration
        run: |
          REF="${{ github.event.client_payload.ref }}"
          echo "::set-env name=SOURCE_BRANCH::${REF#refs/head/}" >> env-vars
          echo "::set-env name=SOURCE_SHA::${{ github.event.client_payload.sha }}" >> env-vars
          echo "::set-env name=ENGINEERING_SHA::${{ github.sha }}" >> env-vars
          echo "::set-env name=LANDING_BRANCH::working/${{ github.event.client_payload.sha }}/${{ github.sha }}" >> env-vars
          cat env-vars

      - uses: actions/upload-artifact@v1
        with:
          name: env-vars
          path: env-vars

      - name: Checkout data-landing
        uses: actions/checkout@v2
        with:
          repository: ficsit/data-landing
          ref: ${{ env.SOURCE_BRANCH }}
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Create working branch
        run: git checkout -b ${LANDING_BRANCH}

      - name: Push working branch
        run: git push origin ${LANDING_BRANCH}

  headers-to-interfaces:
    if: github.event.action == 'source-data-updated'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: env-vars
      - name: Load configuration
        run: cat env-vars/env-vars

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Checkout data-engineering
        uses: actions/checkout@v2
        with:
          path: data-engineering

      - name: Checkout source-data
        uses: actions/checkout@v2
        with:
          path: source-data
          repository: ficsit/source-data
          ref: ${{ env.SOURCE_SHA }}

      - name: Checkout data-landing
        uses: actions/checkout@v2
        with:
          path: data-landing
          repository: ficsit/data-landing
          ref: ${{ env.LANDING_BRANCH }}
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Install dependencies
        working-directory: ./data-engineering
        run: yarn install --frozen-lockfile

      - name: yarn headers-to-interfaces
        working-directory: ./data-engineering
        run: |
          yarn headers-to-interfaces \
            "${GITHUB_WORKSPACE}"/source-data/headers \
            "${GITHUB_WORKSPACE}"/data-landing/interface

      - name: Push to data-landing
        working-directory: ./data-landing
        run: |
          git config --global user.email "ficsit-bot@nevir.net"
          git config --global user.name "Ficsit Bot"
          git add .
          git commit --allow-empty -m "headers-to-interfaces"
          git push

  merge:
    if: github.event.action == 'source-data-updated'
    needs:
      - headers-to-interfaces
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: env-vars
      - name: Load configuration
        run: cat env-vars/env-vars

      - name: Checkout data-landing
        uses: actions/checkout@v2
        with:
          repository: ficsit/data-landing
          ref: ${{ env.SOURCE_BRANCH }}
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Merge
        run: |
          git config --global user.email "ficsit-bot@nevir.net"
          git config --global user.name "Ficsit Bot"
          git fetch origin ${LANDING_BRANCH}
          git merge --squash origin/${LANDING_BRANCH}
          git commit --allow-empty -m "v?????? (ficsit/source-data@${SOURCE_SHA} via ficsit/data-engineering@${ENGINEERING_SHA})"
          git push

      - name: Cleanup
        run: |
          git push origin --delete ${LANDING_BRANCH}
