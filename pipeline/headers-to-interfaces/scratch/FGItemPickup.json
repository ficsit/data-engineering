[
  {
    "kind": "class",
    "name": "UFGUseState_FullInventory",
    "category": "UCLASS",
    "comment": "Use state when inventory of player looking at the item has a full inventory",
    "extends": [
      "UFGUseState"
    ],
    "methods": [
      {
        "name": "UFGUseState_FullInventory"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGUseState_Collecting",
    "category": "UCLASS",
    "comment": "Use state when the item is being collected but takes time",
    "extends": [
      "UFGUseState"
    ],
    "methods": [
      {
        "name": "UFGUseState_Collecting"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "AFGItemPickup",
    "category": "UCLASS",
    "comment": "@todo: This looks like it should be a subclass of FGInteractActor",
    "extends": [
      "AActor",
      "IFGUseableInterface",
      "IFGSaveInterface",
      "IFGSignificanceInterface"
    ],
    "methods": [
      {
        "name": "AFGItemPickup"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "~ Begin UObject interface",
        "returnType": "void"
      },
      {
        "name": "Serialize",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "GainedSignificance_Implementation",
        "comment": "IFGSignificanceInterface",
        "returnType": "void"
      },
      {
        "name": "LostSignificance_Implementation",
        "returnType": "void"
      },
      {
        "name": "UpdateUseState_Implementation",
        "comment": "~ Begin IFGUseableInterface",
        "returnType": "void"
      },
      {
        "name": "OnUse_Implementation",
        "returnType": "void"
      },
      {
        "name": "OnUseStop_Implementation",
        "returnType": "void"
      },
      {
        "name": "IsUseable_Implementation",
        "returnType": "bool"
      },
      {
        "name": "StartIsLookedAt_Implementation",
        "returnType": "void"
      },
      {
        "name": "GetLookAtDecription_Implementation",
        "returnType": "FText"
      },
      {
        "name": "StopIsLookedAt_Implementation",
        "returnType": "void"
      },
      {
        "name": "RegisterInteractingPlayer_Implementation",
        "returnType": "void"
      },
      {
        "name": "UnregisterInteractingPlayer_Implementation",
        "returnType": "void"
      },
      {
        "name": "PickUpByCharacter",
        "comment": "SERVER and CLIENT picking up: Handles regular pick up logic. Only to be called from the Character when they are picking up the item from PickUpItem().",
        "returnType": "void"
      },
      {
        "name": "PickupByAmount",
        "comment": "@return true if there was enough items for pickup",
        "returnType": "bool"
      },
      {
        "name": "PlayPickupEffect",
        "comment": "Multicast to everyone so picking up clients can see effects",
        "returnType": "void"
      },
      {
        "name": "GetNormalizedCollectionProgress",
        "comment": "Returns the normalized progress until collection is complete",
        "returnType": "float"
      },
      {
        "name": "IsPickedUp",
        "comment": "Get if the item is picked up",
        "returnType": "bool"
      },
      {
        "name": "GetPickupItems",
        "comment": "Get the pickup items",
        "returnType": "FInventoryStack"
      },
      {
        "name": "GetPickupItemClass",
        "returnType": "TSubclassOf<classUFGItemDescriptor>&"
      },
      {
        "name": "OnPickup",
        "comment": "SERVER and Client picking up: Called right after this item is added to the players inventory, for GameplayEffects.\nIf you want to do something only on the picking up client, check if byCharacter is locally controlled",
        "returnType": "void"
      },
      {
        "name": "SetNumItems",
        "comment": "Set the number of items",
        "returnType": "void"
      },
      {
        "name": "GetNumItems",
        "comment": "Get the number of items the pickup have",
        "returnType": "int32"
      },
      {
        "name": "OnCollectTimerComplete",
        "comment": "Called when the collection timer expires",
        "returnType": "void"
      },
      {
        "name": "AddToPlayerInventory",
        "comment": "Add the item to the player inventory",
        "returnType": "void"
      },
      {
        "name": "OnRep_PickedUp",
        "comment": "Replicated and set when we are picked up",
        "returnType": "void"
      },
      {
        "name": "UpdateRadioactivity",
        "comment": "Handle any radioactive materials.",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mTimeToPickUp",
        "comment": "** The amount of time required to pickup < 0 == instant */",
        "type": "float"
      },
      {
        "name": "mCollector",
        "comment": "** The player collecting the item */",
        "type": "AFGCharacterPlayer*"
      },
      {
        "name": "mCollectingTimerHandle",
        "comment": "** Timer handler for item being picked up */",
        "type": "FTimerHandle"
      },
      {
        "name": "mPickupItems",
        "comment": "The items we want to be able to pickup",
        "type": "FInventoryStack"
      },
      {
        "name": "mDestroyOnPickup",
        "comment": "If set to true, then we destroy the item when it's pickup:ed",
        "type": "bool"
      },
      {
        "name": "mSoundComponent",
        "comment": "ak component that plays sound",
        "type": "classUAkComponent*"
      },
      {
        "name": "mAudioEvent",
        "comment": "The ak event to post for the sound",
        "type": "classUAkAudioEvent*"
      }
    ]
  }
]