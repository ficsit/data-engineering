[
  {
    "kind": "class",
    "name": "FItemSettings",
    "category": "USTRUCT",
    "comment": "Copyright 2016 Coffee Stain Studios. All Rights Reserved.",
    "extends": [],
    "methods": [
      {
        "name": "FItemSettings"
      },
      {
        "name": "FItemSettings"
      }
    ],
    "properties": [
      {
        "name": "ResourceClass",
        "comment": "The class (and it's subclasses) that we want to specify the resolution for",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "Resolution",
        "comment": "The x and y resolution of the icon (must be power of 2), -1 means no icon",
        "type": "int32"
      },
      {
        "name": "MasterMaterial",
        "comment": "Material that should be used for each icon, need to have a parameter named Texture",
        "type": "classUMaterial*"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FResourceDepositPackage",
    "category": "USTRUCT",
    "extends": [],
    "methods": [],
    "properties": [
      {
        "name": "DropChance",
        "comment": "Chance in roulette selection to get the package",
        "type": "float"
      },
      {
        "name": "ResourceClass",
        "comment": "What resource class to use",
        "type": "TSubclassOf<classUFGResourceDescriptor>"
      },
      {
        "name": "MinAmount",
        "comment": "Amount of resources in deposit as minimum",
        "type": "int32"
      },
      {
        "name": "MaxAmount",
        "comment": "Amount of resources in deposit as max",
        "type": "int32"
      },
      {
        "name": "MiningAmount",
        "comment": "How much to get per \"mine cycle\"",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGResourceSettings",
    "category": "UCLASS",
    "extends": [
      "UFGSettings"
    ],
    "methods": [
      {
        "name": "UFGResourceSettings"
      },
      {
        "name": "Get",
        "comment": "Helper to directly get the resource setting without going through UFGGlobalSettings",
        "returnType": "UFGResourceSettings*"
      },
      {
        "name": "GetResourceSettings",
        "comment": "Get the size of the icon for this resource class",
        "returnType": "FItemSettings&"
      },
      {
        "name": "GetRandomResourceDepositData",
        "comment": "Get a random resource deposit package",
        "returnType": "FResourceDepositPackage&"
      },
      {
        "name": "GetResourceDepositDataFromClass",
        "comment": "Gets deposit data with a specified resource class\nreturns false if no deposit data existed with that resource class",
        "returnType": "FResourceDepositPackage&"
      },
      {
        "name": "GetStackSizeFromEnum",
        "comment": "Gets the size of a Given Stack Size enum from the stack size TMap",
        "returnType": "int32"
      }
    ],
    "properties": [
      {
        "name": "mResourceDepositTable",
        "comment": "List of all available resource deposit packages",
        "type": "TArray<FResourceDepositPackage>"
      },
      {
        "name": "mResourceAmount",
        "comment": "Index 0 is poor amount, 1 is normal and 2 is rich",
        "type": "TArray<FInt32Interval>"
      },
      {
        "name": "mPurityMultiplier",
        "comment": "Index 0 is poor amount, 1 is normal and 2 is rich",
        "type": "TArray<float>"
      },
      {
        "name": "mWaterResourceDescriptor",
        "type": "TSubclassOf<classUFGResourceDescriptor>"
      },
      {
        "name": "mDefaultItemMesh",
        "comment": "Mesh used on items that do not have their own specified.",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mStackSizes",
        "comment": "How many of diffrent items can be in the same stack",
        "type": "TMap<int32,EStackSize>"
      },
      {
        "name": "mItemDropClass",
        "comment": "The class of item we want to drop when we drop something",
        "type": "TSubclassOf<classAFGItemPickup_Spawnable>"
      },
      {
        "name": "mStageClass",
        "comment": "The stage that should be used to make icons",
        "type": "TSubclassOf<classAFGRenderTargetStage>"
      },
      {
        "name": "mIconSettings",
        "comment": "Resolutions of different item classes",
        "type": "TArray<FItemSettings>"
      }
    ]
  }
]