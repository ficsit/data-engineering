[
  {
    "kind": "enum",
    "name": "ERepresentationType",
    "comment": "Copyright 2016 Coffee Stain Studios. All Rights Reserved.",
    "entries": [
      {
        "name": "RT_Default",
        "displayName": "Default"
      },
      {
        "name": "RT_Beacon",
        "displayName": "Beacon"
      },
      {
        "name": "RT_Crate",
        "displayName": "Crate"
      },
      {
        "name": "RT_Hub",
        "displayName": "Hub"
      },
      {
        "name": "RT_Ping",
        "displayName": "Ping"
      },
      {
        "name": "RT_Player",
        "displayName": "Player"
      },
      {
        "name": "RT_RadarTower",
        "displayName": "RadarTower"
      },
      {
        "name": "RT_Resource",
        "displayName": "Resource"
      },
      {
        "name": "RT_SpaceElevator",
        "displayName": "SpaceElevator"
      },
      {
        "name": "RT_StartingPod",
        "displayName": "StartingPod"
      },
      {
        "name": "RT_Train",
        "displayName": "Train"
      },
      {
        "name": "RT_TrainStation",
        "displayName": "TrainStation"
      },
      {
        "name": "RT_Vehicle",
        "displayName": "Vehicle"
      },
      {
        "name": "RT_VehicleDockingStation",
        "displayName": "VehicleDockingStation"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "EFogOfWarRevealType",
    "entries": [
      {
        "name": "FOWRT_None",
        "displayName": "None"
      },
      {
        "name": "FOWRT_Static",
        "displayName": "Static"
      },
      {
        "name": "FOWRT_Intermittent",
        "displayName": "Intermittent"
      },
      {
        "name": "FOWRT_Dynamic",
        "displayName": "Dynamic"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "ECompassViewDistance",
    "entries": [
      {
        "name": "CVD_Off",
        "displayName": "Off"
      },
      {
        "name": "CVD_Near",
        "displayName": "Near"
      },
      {
        "name": "CVD_Mid",
        "displayName": "Mid"
      },
      {
        "name": "CVD_Far",
        "displayName": "Far"
      },
      {
        "name": "CVD_Always",
        "displayName": "Always"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGActorRepresentation",
    "category": "UCLASS",
    "comment": "This object represents an actor in the world. Used in the compass and the minimap.",
    "extends": [
      "UObject"
    ],
    "methods": [
      {
        "name": "IsSupportedForNetworking",
        "comment": "Mark this class as supported for networking",
        "returnType": "bool"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Decide on what properties to replicate",
        "returnType": "void"
      },
      {
        "name": "GetRealActor",
        "comment": "Get the Real actor we represent, might not be relevant on client",
        "returnType": "AActor*"
      },
      {
        "name": "GetIsTemporary",
        "comment": "If this actor representation is temporary or not",
        "returnType": "bool"
      },
      {
        "name": "IsActorStatic",
        "comment": "Is this the represented actor static or not",
        "returnType": "bool"
      },
      {
        "name": "GetActorLocation",
        "comment": "Get the location of the represented actor",
        "returnType": "FVector"
      },
      {
        "name": "GetActorRotation",
        "comment": "Get the rotation of the represented actor",
        "returnType": "FRotator"
      },
      {
        "name": "GetRepresentationTexture",
        "comment": "This is the image to render in the compass",
        "returnType": "classUTexture2D*"
      },
      {
        "name": "GetRepresentationText",
        "comment": "This is the text to render in the compass",
        "returnType": "FText"
      },
      {
        "name": "GetRepresentationColor",
        "comment": "This is the color to render in the compass",
        "returnType": "FLinearColor"
      },
      {
        "name": "GetRepresentationType",
        "returnType": "ERepresentationType"
      },
      {
        "name": "GetShouldShowInCompass",
        "comment": "If this should be shown in the compass or not",
        "returnType": "bool"
      },
      {
        "name": "GetShouldShowOnMap",
        "comment": "If this should be shown on the map or not",
        "returnType": "bool"
      },
      {
        "name": "GetFogOfWarRevealType",
        "returnType": "EFogOfWarRevealType"
      },
      {
        "name": "GetFogOfWarRevealRadius",
        "returnType": "float"
      },
      {
        "name": "SetIsOnClient",
        "returnType": "void"
      },
      {
        "name": "GetCompassViewDistance",
        "returnType": "ECompassViewDistance"
      },
      {
        "name": "SetLocalCompassViewDistance",
        "comment": "Sets the client representations compass view distance directly. It doesn't change the connected actors status so this is only for local updates to avoid waiting for replicated value",
        "returnType": "void"
      },
      {
        "name": "GetActorRepresentationManager",
        "comment": "Returns a cast of outer",
        "returnType": "classAFGActorRepresentationManager*"
      },
      {
        "name": "UpdateLocation",
        "comment": "This updates the location for this actor representation",
        "returnType": "void"
      },
      {
        "name": "UpdateRotation",
        "comment": "This updates the rotation for this actor representation",
        "returnType": "void"
      },
      {
        "name": "UpdateRepresentationText",
        "comment": "Updates the representation text for this actor",
        "returnType": "void"
      },
      {
        "name": "UpdateRepresentationTexture",
        "comment": "Updates the representation texture for this actor",
        "returnType": "void"
      },
      {
        "name": "UpdateRepresentationColor",
        "comment": "Updates the color of the representation for this actor",
        "returnType": "void"
      },
      {
        "name": "UpdateShouldShowInCompass",
        "comment": "Updates if this should be shown in the compass or not",
        "returnType": "void"
      },
      {
        "name": "UpdateShouldShowOnMap",
        "comment": "Updates if this should be shown on the map or not",
        "returnType": "void"
      },
      {
        "name": "UpdateFogOfWarRevealType",
        "comment": "Updates the fog of war reveal type",
        "returnType": "void"
      },
      {
        "name": "UpdateFogOfWarRevealRadius",
        "comment": "Updates the fog of war reveal radius",
        "returnType": "void"
      },
      {
        "name": "UpdateCompassViewDistance",
        "comment": "Updates the view distance for this actor on the compass",
        "returnType": "void"
      },
      {
        "name": "OnRep_ShouldShowInCompass",
        "comment": "Repnotifies",
        "returnType": "void"
      },
      {
        "name": "OnRep_ShouldShowOnMap",
        "returnType": "void"
      },
      {
        "name": "OnRep_ActorRepresentationUpdated",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mIsLocal",
        "comment": "This actor representation is just local and should not be shown to other players",
        "type": "bool"
      },
      {
        "name": "mIsOnClient",
        "comment": "This actor representation resides on a client, used to determine if we want the replicated property or get it from the actor itself.\n\tThis is used on properties that are replicated with notification",
        "type": "bool"
      },
      {
        "name": "mRealActor",
        "comment": "This is the real actor that this representation represents",
        "type": "AActor*"
      },
      {
        "name": "mActorLocation",
        "comment": "This is the actor location",
        "type": "FVector_NetQuantize"
      },
      {
        "name": "mActorRotation",
        "comment": "This is the actor rotation",
        "type": "FRotator"
      },
      {
        "name": "mIsStatic",
        "comment": "If the actor is static or can be moved",
        "type": "bool"
      },
      {
        "name": "mRepresentationTexture",
        "comment": "This is the texture to show for this actor representation",
        "type": "UTexture2D*"
      },
      {
        "name": "mRepresentationText",
        "comment": "This is the text to show for this actor representation",
        "type": "FText"
      },
      {
        "name": "mRepresentationColor",
        "comment": "This is the color used for the representation of this actor",
        "type": "FLinearColor"
      },
      {
        "name": "mRepresentationType",
        "comment": "This helps define how this actor representation should be presented",
        "type": "ERepresentationType"
      },
      {
        "name": "mFogOfWarRevealType",
        "type": "EFogOfWarRevealType"
      },
      {
        "name": "mFogOfWarRevealRadius",
        "type": "float"
      },
      {
        "name": "mIsTemporary",
        "comment": "If this representation should be removed when lifetime < 0.0f",
        "type": "bool"
      },
      {
        "name": "mLifeTime",
        "comment": "How long this representation has to live",
        "type": "float"
      },
      {
        "name": "mShouldShowInCompass",
        "comment": "If this should be shown in the compass or not",
        "type": "bool"
      },
      {
        "name": "mShouldShowOnMap",
        "comment": "If this should be shown on the map or not",
        "type": "bool"
      },
      {
        "name": "mCompassViewDistance",
        "comment": "How far away this representation should be shown in the compass",
        "type": "ECompassViewDistance"
      }
    ]
  }
]