[
  {
    "kind": "class",
    "name": "AFGProjectile",
    "category": "UCLASS",
    "comment": "Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.",
    "extends": [
      "AActor",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "AFGProjectile"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Decide on what properties to replicate",
        "returnType": "void"
      },
      {
        "name": "PostInitializeComponents",
        "comment": "initial setup",
        "returnType": "void"
      },
      {
        "name": "ShouldSave_Implementation",
        "comment": "** Save Game Interface. Default is to not save, but the save interface is implemented here to allow for enabling in children (eg. FGNobeliskExplosive) */",
        "returnType": "bool"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "TakeDamage",
        "comment": "Start AActor interface",
        "returnType": "float"
      },
      {
        "name": "LifeSpanExpired",
        "comment": "Called when the lifespan of an actor expires (if he has one).",
        "returnType": "void"
      },
      {
        "name": "OnImpact",
        "comment": "handle hit",
        "returnType": "void"
      },
      {
        "name": "OnBounce",
        "comment": "handle bounce",
        "returnType": "void"
      },
      {
        "name": "GetCollisionComp",
        "comment": "Returns CollisionComp subobject",
        "returnType": "classUSphereComponent*"
      },
      {
        "name": "GetProjectileMovement",
        "comment": "Returns ProjectileMovement subobject",
        "returnType": "classUProjectileMovementComponent*"
      },
      {
        "name": "GetProjectileTargetLocation",
        "comment": "Returns the location we are aiming for ( if any )",
        "returnType": "FVector"
      },
      {
        "name": "SetTargetLocation",
        "comment": "Returns the location we are aiming for ( if any )",
        "returnType": "void"
      },
      {
        "name": "PlayExplosionEffects",
        "comment": "Function to set up explosion effects in Blueprint",
        "returnType": "void"
      },
      {
        "name": "SetProjectileData",
        "returnType": "void"
      },
      {
        "name": "PlayAttachEffect",
        "comment": "Called when we attach this actor to something like the world, a factory, a character",
        "returnType": "void"
      },
      {
        "name": "GetCollisionSphere",
        "comment": "Returns the collision sphere",
        "returnType": "USphereComponent*"
      },
      {
        "name": "SetInitialVelocity",
        "comment": "Sets the initial velocity so that it can be replicated to clients",
        "returnType": "void"
      },
      {
        "name": "DealExplosionDamage",
        "comment": "trigger explosion",
        "returnType": "void"
      },
      {
        "name": "DealImpactDamage",
        "comment": "Deal damage from the impact",
        "returnType": "void"
      },
      {
        "name": "DisableAndSetLifeSpan",
        "comment": "shutdown projectile and prepare for destruction",
        "returnType": "void"
      },
      {
        "name": "OnRep_Exploded",
        "comment": "[client] explosion happened",
        "returnType": "void"
      },
      {
        "name": "OnNotifiedExploded",
        "comment": "Virtual function for any additional client side effect handling in child classes",
        "returnType": "void"
      },
      {
        "name": "AttachProjectileToImpactActor",
        "comment": "attach this projectile to an enemy or alike",
        "returnType": "bool"
      },
      {
        "name": "OnRep_InitialVelocity",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mIsCosmeticProjectile",
        "comment": "This projectile is just used for cosmetics and shouldn't deal damage. Like on remote clients",
        "type": "bool"
      },
      {
        "name": "mProjectileData",
        "comment": "projectile data",
        "type": "FProjectileData"
      },
      {
        "name": "mHasExploded",
        "comment": "did it explode?",
        "type": "bool"
      },
      {
        "name": "mInitialVelocity",
        "comment": "Used to get the velocity over to clients",
        "type": "FVector"
      },
      {
        "name": "mCollisionComp",
        "comment": "Sphere collision component",
        "type": "classUSphereComponent*"
      },
      {
        "name": "mProjectileMovement",
        "comment": "Projectile movement component",
        "type": "classUProjectileMovementComponent*"
      },
      {
        "name": "mTargetLocation",
        "comment": "Location we are aiming at ( if any )",
        "type": "FVector"
      },
      {
        "name": "mCanTriggerExplodeBySameClass",
        "comment": "Indicates if we should explode if we are taking damage from same actor class as ourselves",
        "type": "bool"
      },
      {
        "name": "mExplodeAtEndOfLife",
        "comment": "Should the projectile explode when it dies of lifespan?",
        "type": "bool"
      },
      {
        "name": "mCachedPC",
        "comment": "Caching the PC so that we can do damage even without a valid weapon",
        "type": "classAFGPlayerController*"
      },
      {
        "name": "mWasFiredByWeapon",
        "comment": "Was projectile fired by a weapon",
        "type": "bool"
      }
    ]
  }
]