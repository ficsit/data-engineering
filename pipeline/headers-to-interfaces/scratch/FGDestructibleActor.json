[
  {
    "kind": "class",
    "name": "AFGDestructibleActor",
    "category": "UCLASS",
    "comment": "This is an actor that should be able to be destroyed by explosions and stuff. Can block cave entrances and stuff.\nIf you make a new rock that should be destructible, then you should make a data only blueprint of this",
    "extends": [
      "ADestructibleActor",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "AFGDestructibleActor"
      },
      {
        "name": "BeginPlay",
        "comment": "Begin Actor Interface",
        "returnType": "void"
      },
      {
        "name": "TakeDamage",
        "comment": "End Actor Interface",
        "returnType": "float"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "PlayDestructEffects",
        "comment": "Called on server and client when we destruct this actor",
        "returnType": "void"
      },
      {
        "name": "DisableCollision",
        "comment": "Turn off collision",
        "returnType": "void"
      },
      {
        "name": "MakeDestructible",
        "comment": "Change our static mesh actor to the destructible actor",
        "returnType": "void"
      },
      {
        "name": "OnDestructibleFractured",
        "comment": "Called when this actor is fractured",
        "returnType": "void"
      },
      {
        "name": "Multicast_OnDestructibleFractured",
        "comment": "Called on client when this is fractured",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mStaticMeshProxy",
        "comment": "The mesh that should be rendered before we start going destructible. Used for optimization as it has less triangles",
        "type": "UStaticMeshComponent*"
      },
      {
        "name": "mHasBeenFractured",
        "comment": "So we can save if this has been fractured",
        "type": "bool"
      },
      {
        "name": "mSetCollisionTimerHandle",
        "comment": "Timer handle for delaying disableing collisison",
        "type": "FTimerHandle"
      },
      {
        "name": "mDestroyTimerHandle",
        "comment": "Timer handle for delaying destroy",
        "type": "FTimerHandle"
      }
    ]
  }
]