[
  {
    "kind": "class",
    "name": "UFGRailroadTrackConnectionComponent",
    "category": "UCLASS",
    "comment": "The actual track connection placed in the editor.",
    "extends": [
      "UFGConnectionComponent"
    ],
    "methods": [
      {
        "name": "UFGRailroadTrackConnectionComponent"
      },
      {
        "name": "OnComponentDestroyed",
        "comment": "Begin ActorComponent interface",
        "returnType": "void"
      },
      {
        "name": "GetConnectorLocation",
        "comment": "Return the connectors world location.",
        "returnType": "FVector"
      },
      {
        "name": "GetConnectorNormal",
        "comment": "Return the connectors world normal.",
        "returnType": "FVector"
      },
      {
        "name": "AddConnection",
        "comment": "Add a connected component.\n@note Sets both ends of the connection.",
        "returnType": "void"
      },
      {
        "name": "GetConnection",
        "comment": "@return The connected connection at switch position; nullptr if not connected or bad index.",
        "returnType": "UFGRailroadTrackConnectionComponent*"
      },
      {
        "name": "GetConnection",
        "comment": "@note If this is called on a component with multiple connections (switch/turnout) the result is depends on the switch's position.\n@return The connected connection; nullptr if not connected.",
        "returnType": "UFGRailroadTrackConnectionComponent*"
      },
      {
        "name": "GetConnections",
        "comment": "@return All connections; empty if not connected. If more than one this is a switch.",
        "returnType": "TArray<UFGRailroadTrackConnectionComponent*>"
      },
      {
        "name": "RemoveConnection",
        "comment": "If nothing is connected this does nothing.\n@note This resets the switch's position to 0 or INDEX_NONE.",
        "returnType": "void"
      },
      {
        "name": "IsConnected",
        "comment": "Is this connection connected to anything.\n@return - true if connected; otherwise false. Always false if attached to hologram.",
        "returnType": "bool"
      },
      {
        "name": "GetTrackPosition",
        "comment": "@return The track position of this connection.",
        "returnType": "FRailroadTrackPosition"
      },
      {
        "name": "GetTrack",
        "comment": "@return Owning track for this connection.",
        "returnType": "classAFGBuildableRailroadTrack*"
      },
      {
        "name": "IsFacingSwitch",
        "comment": "@return what part of a switch this connection is.",
        "returnType": "bool"
      },
      {
        "name": "IsTrailingSwitch",
        "returnType": "bool"
      },
      {
        "name": "GetNumSwitchPositions",
        "comment": "\n @return The number of connections, i.e. switch positions.",
        "returnType": "int32"
      },
      {
        "name": "GetSwitchPosition",
        "comment": "@return The current switch position [0,n]; 0 if not a switch.",
        "returnType": "int32"
      },
      {
        "name": "SetSwitchPosition",
        "comment": "Set the current switch position.\n@param position Will be clamped to the valid range [0,n].",
        "returnType": "void"
      },
      {
        "name": "SetSwitchPosition",
        "comment": "Set the current switch position to match the given connections track.",
        "returnType": "void"
      },
      {
        "name": "GetSwitchControl",
        "comment": "@return The switch control, if any.",
        "returnType": "classAFGBuildableRailroadSwitchControl*"
      },
      {
        "name": "GetStation",
        "comment": "@return The station at the connection, if any.",
        "returnType": "classAFGBuildableRailroadStation*"
      },
      {
        "name": "GetSignal",
        "comment": "@return The signal at the connection, if any.",
        "returnType": "classAFGBuildableRailroadSignal*"
      },
      {
        "name": "GetOpposite",
        "comment": "Get the connection opposite to this one on the track segment.",
        "returnType": "UFGRailroadTrackConnectionComponent*"
      },
      {
        "name": "GetNext",
        "comment": "Get the next connection along the track from this one, considering switches position.",
        "returnType": "UFGRailroadTrackConnectionComponent*"
      },
      {
        "name": "FindOverlappingConnections",
        "comment": "Find the closest overlapping connection matching all search criteria.",
        "returnType": "UFGRailroadTrackConnectionComponent*"
      },
      {
        "name": "SetSwitchControl",
        "comment": "Functions used by buildings that are built on a track, do not call them unless you know what you're doing.",
        "returnType": "void"
      },
      {
        "name": "SetStation",
        "returnType": "void"
      },
      {
        "name": "SetSignal",
        "returnType": "void"
      },
      {
        "name": "SetTrackPosition",
        "returnType": "void"
      },
      {
        "name": "AddConnectionInternal",
        "comment": "@todotrains Verify building switches at both sides of a connection, the weird bug some people report.\nInternal helper functions to add/remove connection.",
        "returnType": "void"
      },
      {
        "name": "RemoveConnectionInternal",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mRailRoadSwitchDelegate",
        "comment": "Delegate to fire when changing switch on a track",
        "type": "FOnRailRoadConnectionSwitched"
      },
      {
        "name": "mTrackPosition",
        "comment": "Position of this connection component on the track.",
        "type": "FRailroadTrackPosition"
      },
      {
        "name": "mConnectedComponents",
        "comment": "The components we're connected to. If >1 this is a switch.",
        "type": "TArray<UFGRailroadTrackConnectionComponent*>"
      },
      {
        "name": "mSwitchPosition",
        "comment": "If this is a switch, this is the switch position.",
        "type": "int32"
      },
      {
        "name": "mSwitchControl",
        "comment": "The switch control associated with this connection, if any.",
        "type": "classAFGBuildableRailroadSwitchControl*"
      },
      {
        "name": "mStation",
        "comment": "The station associated with this connection, if any.",
        "type": "classAFGBuildableRailroadStation*"
      },
      {
        "name": "mSignal",
        "comment": "The signal associated with this connection, if any.\n@todotrains",
        "type": "classAFGBuildableRailroadSignal*"
      }
    ]
  }
]