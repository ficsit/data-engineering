[
  {
    "kind": "class",
    "name": "PipeJunction",
    "comment": "Contains all info needed to update a fluid box.",
    "extends": [],
    "methods": [
      {
        "name": "PipeJunction"
      }
    ],
    "properties": [
      {
        "name": "PreviousBox",
        "type": "structFFluidBox*"
      },
      {
        "name": "CurrentBox",
        "type": "structFFluidBox*"
      },
      {
        "name": "PreviousOutflowZ",
        "comment": "The Z height where the outflow is located in relation between the previous and current pipe. [meters]",
        "type": "float"
      },
      {
        "name": "CurrentOutflowZ",
        "type": "float"
      },
      {
        "name": "PreviousOneWayModifier",
        "comment": "Controls one way fluid movements, e.g. pumps and reservoirs.",
        "type": "float"
      },
      {
        "name": "CurrentOneWayModifier",
        "type": "float"
      },
      {
        "name": "Flow",
        "comment": "A positive flow, and move, is from the previous box to into the current box.\nUnits for the flow is m^3/s.",
        "type": "float"
      },
      {
        "name": "MovedContent",
        "type": "float"
      },
      {
        "name": "Debug_Location",
        "comment": "@todoPipes WITH_EDITORONLY_DATA",
        "type": "FVector"
      },
      {
        "name": "Debug_Name",
        "type": "FString"
      },
      {
        "name": "Debug_String",
        "type": "FString"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGPipeNetwork",
    "category": "UCLASS",
    "comment": "A pipe network is responsible for a group of connected pipes and their fluid simulations.",
    "extends": [
      "AInfo",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin AActor",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "EndPlay",
        "returnType": "void"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldTickNetwork",
        "comment": "Should the subsystem tick this network?",
        "returnType": "bool"
      },
      {
        "name": "UpdateSimulation",
        "comment": "Run the simulation on the networks junctions and fluid boxes",
        "returnType": "void"
      },
      {
        "name": "GetPipeNetworkID",
        "comment": "Get the id for this network.",
        "returnType": "int32"
      },
      {
        "name": "SetPipeNetworkID",
        "returnType": "void"
      },
      {
        "name": "GetFluidDescriptor",
        "comment": "Get the type of fluid in this network.",
        "returnType": "TSubclassOf<UFGItemDescriptor>"
      },
      {
        "name": "AddFluidIntegrant",
        "comment": "Functions to manage this network, called by the subsystem.",
        "returnType": "void"
      },
      {
        "name": "RemoveFluidIntegrant",
        "returnType": "void"
      },
      {
        "name": "NumFluidIntegrants",
        "returnType": "int32"
      },
      {
        "name": "MergeNetworks",
        "returnType": "void"
      },
      {
        "name": "RemoveAllFluidIntegrants",
        "returnType": "void"
      },
      {
        "name": "GetFirstFluidIntegrant",
        "comment": "Get the first pipe in the pipeline, all other pipes should be reachable from this one.",
        "returnType": "classIFGFluidIntegrantInterface*"
      },
      {
        "name": "TrySetFluidDescriptor",
        "comment": "Assign a fluid descriptor to this network. Will fail if one is already specified.\nThe effects of the change won't occur until the next tick when the network is rebuilt",
        "returnType": "void"
      },
      {
        "name": "TryPropagateFluidDescriptorFrom",
        "comment": "Propagate fluid descriptor from another network, does nothing if this network already have a descriptor.",
        "returnType": "void"
      },
      {
        "name": "FlushIntegrant",
        "comment": "Flush a single integrant in this network ( does not reset the fluid descriptor as that is per network )",
        "returnType": "void"
      },
      {
        "name": "FlushNetwork",
        "comment": "Flush a network of all contents and remove its fluid descriptor",
        "returnType": "void"
      },
      {
        "name": "MarkForFullRebuild",
        "comment": "Manage rebuilding networks.",
        "returnType": "void"
      },
      {
        "name": "NeedFullRebuild",
        "returnType": "bool"
      },
      {
        "name": "OnFullRebuildCompleted",
        "comment": "Callback for when this network has been rebuilt.",
        "returnType": "void"
      },
      {
        "name": "DisplayDebugDetails",
        "comment": "Debug",
        "returnType": "void"
      },
      {
        "name": "RebuildUpdateList",
        "returnType": "void"
      },
      {
        "name": "UpdateFluidDescriptor",
        "returnType": "void"
      },
      {
        "name": "CreatePressureGroup",
        "returnType": "int32"
      },
      {
        "name": "FindTopMostPressureGroupIndex",
        "returnType": "int32"
      },
      {
        "name": "UpdatePressureGroups",
        "returnType": "void"
      },
      {
        "name": "UpdatePressure",
        "returnType": "void"
      },
      {
        "name": "PostUpdatePressureGroups",
        "returnType": "void"
      },
      {
        "name": "PreUpdateFlow",
        "returnType": "void"
      },
      {
        "name": "UpdateFlow",
        "returnType": "void"
      },
      {
        "name": "UpdateContent",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "QUARTER_RULE",
        "type": "staticconstexprfloat"
      },
      {
        "name": "mPipeNetworkID",
        "comment": "Unique id of this network, assigned at spawn.\nNote: This is not persistent between play sessions.",
        "type": "int32"
      },
      {
        "name": "mFluidDescriptor",
        "comment": "The type of liquid in this network.",
        "type": "TSubclassOf<UFGItemDescriptor>"
      },
      {
        "name": "mPendingFluidDescriptor",
        "comment": "On the next subsystem tick, this network will be marked for rebuild and will assign each connection this descriptor\nThe reason for not setting it directly is in case multiple buildables attempt to add different resource types in the same frame",
        "type": "TSubclassOf<UFGItemDescriptor>"
      },
      {
        "name": "mFluidDensity",
        "comment": "Cached constants for easy access.\nAround 1 is good for water,",
        "type": "float"
      },
      {
        "name": "mFluidViscosity",
        "comment": "Around 1 is good for water, higher for oils, lower for gases.",
        "type": "float"
      },
      {
        "name": "mGravity",
        "comment": "[m/s^2]",
        "type": "float"
      },
      {
        "name": "mFluidFriction",
        "type": "float"
      },
      {
        "name": "mPuddleRequirement",
        "comment": "Normalized quantity of fluid that must be present in a pipe to allow transmission ( defined in FactorySettings and assigned from viscosity )",
        "type": "float"
      },
      {
        "name": "mFluidIntegrants",
        "comment": "All Fluid Integrant Interfaces in this network",
        "type": "TArray<classIFGFluidIntegrantInterface*>"
      },
      {
        "name": "mFluidIntegrantScriptInterfaces",
        "comment": "Compiled during save, and Interface classes are extracted on load. Stores the mFluidIntegrants in a UPROPERTY type",
        "type": "TArray<TScriptInterface<classIFGFluidIntegrantInterface>>"
      },
      {
        "name": "mUpdateList",
        "comment": "All Junctions we need to tick each frame\nA junction represents the point of connection between three FGPipeConnectionComponents",
        "type": "TArray<PipeJunction>"
      },
      {
        "name": "mRebuildUpdateList",
        "comment": "If the update list is not up to date",
        "type": "bool"
      },
      {
        "name": "mNeedFullRebuild",
        "comment": "Does this pipe line needs a full rebuild.",
        "type": "bool"
      },
      {
        "name": "mForceFluidDescriptorUpdate",
        "comment": "Does this network need to reassign its Fluid Desc to all connections ( needed after performing a rebuild )",
        "type": "bool"
      },
      {
        "name": "mPressureGroups",
        "comment": "Intermediate products used to propagate the pressure.\nSee comments in implementation for details.",
        "type": "TArray<FPressureGroup>"
      }
    ]
  }
]