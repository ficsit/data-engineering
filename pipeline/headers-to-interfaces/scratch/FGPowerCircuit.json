[
  {
    "kind": "class",
    "name": "FPowerGraphPoint",
    "category": "USTRUCT",
    "comment": "A point on the power curve.",
    "extends": [],
    "methods": [
      {
        "name": "FPowerGraphPoint"
      },
      {
        "name": "NetSerialize",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "Consumed",
        "comment": "Data for this point.",
        "type": "float"
      },
      {
        "name": "Produced",
        "type": "float"
      },
      {
        "name": "ProductionCapacity",
        "type": "float"
      }
    ]
  },
  {
    "kind": "class",
    "name": "TStructOpsTypeTraits",
    "extends": [
      "TStructOpsTypeTraitsBase2"
    ],
    "methods": [],
    "properties": []
  },
  {
    "kind": "class",
    "name": "FPowerCircuitStats",
    "category": "USTRUCT",
    "comment": "Stats for a power circuit, refreshed once every second. Implemented as a ring buffer, so that we don't have to re-replicate all the time",
    "extends": [],
    "methods": [
      {
        "name": "FPowerCircuitStats"
      },
      {
        "name": "NetSerialize",
        "returnType": "bool"
      },
      {
        "name": "MakeAndAddGraphPoint",
        "comment": "Helper to make a new graph point.",
        "returnType": "FPowerGraphPoint&"
      },
      {
        "name": "MakeGraphPoint",
        "comment": "Helper to make a new graph point from current time",
        "returnType": "void"
      },
      {
        "name": "GetLastGraphPoint",
        "comment": "Get the last graph point in the stats",
        "returnType": "void"
      },
      {
        "name": "AdvanceToNextGraphPoint",
        "comment": "Advances the graph and gets the next graph point we want to write to.",
        "returnType": "FPowerGraphPoint&"
      },
      {
        "name": "GetNumGraphPoints",
        "comment": "Get the number of points in our graph",
        "returnType": "int32"
      },
      {
        "name": "GetGraphPointAtIndex",
        "comment": "Get item of index in our graph @return false if the index is invalid",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "StatIntervalTime",
        "comment": "The duration between each stat.",
        "type": "float"
      },
      {
        "name": "StatHistoryTime",
        "comment": "For how long do we keep the stats.",
        "type": "float"
      },
      {
        "name": "LastStatTime",
        "comment": "Last time we collected stats.",
        "type": "float"
      },
      {
        "name": "LastFuseTriggeredTime",
        "comment": "Last time the fuse was triggered.",
        "type": "float"
      },
      {
        "name": "PowerProductionCapacity",
        "comment": "How much power can be produced.",
        "type": "float"
      },
      {
        "name": "PowerProduced",
        "comment": "How much power is produced.",
        "type": "float"
      },
      {
        "name": "PowerConsumed",
        "comment": "How much power is consumed.",
        "type": "float"
      },
      {
        "name": "HasPinnedGraphPoint",
        "comment": "Freeze the stats until the next stat.",
        "type": "bool"
      },
      {
        "name": "PinnedGraphPoint",
        "type": "FPowerGraphPoint"
      },
      {
        "name": "Items",
        "comment": "All the points on the graph.",
        "type": "TArray<FPowerGraphPoint>"
      },
      {
        "name": "FirstIndex",
        "comment": "The index we count as the first index in our ring buffer",
        "type": "int8"
      },
      {
        "name": "NumGraphPointsMax",
        "comment": "Maximum number of points in the graph.",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "TStructOpsTypeTraits",
    "extends": [
      "TStructOpsTypeTraitsBase2"
    ],
    "methods": [],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGPowerCircuit",
    "category": "UCLASS",
    "comment": "Implementation of a power circuit.",
    "extends": [
      "UFGCircuit"
    ],
    "methods": [
      {
        "name": "GetLifetimeReplicatedProps",
        "returnType": "void"
      },
      {
        "name": "PreReplication",
        "returnType": "void"
      },
      {
        "name": "UFGPowerCircuit"
      },
      {
        "name": "ResetFuse",
        "comment": "Resets the fuse.",
        "returnType": "void"
      },
      {
        "name": "IsFuseTriggered",
        "comment": "@return true if the fuse is triggered; false otherwise.",
        "returnType": "bool"
      },
      {
        "name": "GetStats",
        "comment": "Get the stats for this circuit.",
        "returnType": "void"
      },
      {
        "name": "GetGraphPointAtIndex",
        "comment": "Get the graph point from the index in our stats,  @return false if the index is invalid",
        "returnType": "bool"
      },
      {
        "name": "GetNumGraphPoint",
        "comment": "Get how many graph points there is in our stats",
        "returnType": "int32"
      },
      {
        "name": "DisplayDebug",
        "comment": "Debug",
        "returnType": "void"
      },
      {
        "name": "TickCircuit",
        "comment": "Begin UFGCircuit interface",
        "returnType": "void"
      },
      {
        "name": "OnCircuitChanged",
        "returnType": "void"
      },
      {
        "name": "UpdateStatsGeneral",
        "comment": "Update the power stats.",
        "returnType": "void"
      },
      {
        "name": "UpdateStatsGraph",
        "returnType": "void"
      },
      {
        "name": "PinStatsGraphPoint",
        "comment": "Pin the current stats until the next interval.",
        "returnType": "void"
      },
      {
        "name": "StatFuseTriggered",
        "comment": "Let the stats now the fuse got triggered.",
        "returnType": "void"
      },
      {
        "name": "OnFuseSet",
        "comment": "Called when the fuse is set/reset in the circuit.",
        "returnType": "void"
      },
      {
        "name": "OnFuseReset",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mPowerInfos",
        "comment": "All power infos in this circuit, in the order they should be updated.",
        "type": "TArray<classUFGPowerInfoComponent*>"
      },
      {
        "name": "mPowerProductionCapacity",
        "comment": "Total amount of energy that can be produced in the circuit. Used for stats.",
        "type": "float"
      },
      {
        "name": "mPowerProduced",
        "comment": "Total amount of energy produced in the circuit.",
        "type": "float"
      },
      {
        "name": "mPowerConsumed",
        "comment": "Total amount of energy consumed in the circuit.",
        "type": "float"
      },
      {
        "name": "mIsFuseTriggered",
        "comment": "@optimize This should preferably not be replicated always.\ntrue if the fuse was triggered.",
        "type": "bool"
      },
      {
        "name": "mPowerStats",
        "comment": "The power consumption/production over time. Used for feedback.",
        "type": "FPowerCircuitStats"
      }
    ]
  }
]