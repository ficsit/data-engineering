[
  {
    "kind": "class",
    "name": "FPickedUpInstance",
    "category": "USTRUCT",
    "extends": [],
    "methods": [
      {
        "name": "FPickedUpInstance"
      },
      {
        "name": "FPickedUpInstance"
      }
    ],
    "properties": [
      {
        "name": "InstanceMesh",
        "type": "classUStaticMesh*"
      },
      {
        "name": "Location",
        "type": "FVector"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGChainsaw",
    "category": "UCLASS",
    "extends": [
      "AFGEquipment"
    ],
    "methods": [
      {
        "name": "AFGChainsaw",
        "comment": "Ctor"
      },
      {
        "name": "Tick",
        "comment": "~ Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "ShouldSaveState",
        "comment": "Begin AFGEquipment interface",
        "returnType": "bool"
      },
      {
        "name": "UnEquip",
        "returnType": "void"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Replication",
        "returnType": "void"
      },
      {
        "name": "IsSawEngaged",
        "comment": "@return true if we are sawing",
        "returnType": "bool"
      },
      {
        "name": "IsSawing",
        "comment": "@return true if we are sawing AND we have a valid saw component",
        "returnType": "bool"
      },
      {
        "name": "SawProgress",
        "comment": "In percent, how long into our progress have we gone into sawing down our current tree",
        "returnType": "float"
      },
      {
        "name": "DoesPlayerHaveChainsawEquipped",
        "comment": "returns true if the specified player has a chainsaw equipped",
        "returnType": "bool"
      },
      {
        "name": "ConsumeFuel",
        "comment": "Consumes fuel, returns false if we are out of fuel",
        "returnType": "bool"
      },
      {
        "name": "StartSawing",
        "comment": "Start sawing, does no logic check if it's valid, caller is assumed to do so\nIf client, calls server",
        "returnType": "void"
      },
      {
        "name": "CanStartSawing",
        "returnType": "bool"
      },
      {
        "name": "Server_StartSawing",
        "comment": "Calls StartSawing on server",
        "returnType": "void"
      },
      {
        "name": "StopSawing",
        "comment": "Stops sawing, does no logic check if it's valid, caller is assumed to do so\nIf client, calls server",
        "returnType": "void"
      },
      {
        "name": "Server_RemoveChainsawedObject",
        "comment": "Removes the foliage we just cut down",
        "returnType": "void"
      },
      {
        "name": "RemoveChainsawedObject",
        "returnType": "void"
      },
      {
        "name": "RemoveCollateralFoliage",
        "comment": "Removes surrounding foliage around the chainsawedObject and picks it up the within the Collateral pick-up radius",
        "returnType": "void"
      },
      {
        "name": "BroadcastPickup",
        "returnType": "void"
      },
      {
        "name": "Server_StopSawing",
        "comment": "Calls StopSawing on server",
        "returnType": "void"
      },
      {
        "name": "HasAnyFuel",
        "comment": "Return true we have any energy stored or if our owner has any fuel",
        "returnType": "bool"
      },
      {
        "name": "GetFuelClass",
        "comment": "Returns the current fuel class used for the chainsaw",
        "returnType": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "OnPrimaryFirePressed",
        "comment": "Called from input",
        "returnType": "void"
      },
      {
        "name": "OnPrimaryFireReleased",
        "returnType": "void"
      },
      {
        "name": "StartNewSawing",
        "comment": "Start sawing on a new tree",
        "returnType": "void"
      },
      {
        "name": "IsValidSawing",
        "comment": "Is it valid to saw on this component.\n@param newIndex: must be set to the corresponding index if sawingComponent is a UHierarchicalInstancedStaticMeshComponent",
        "returnType": "bool"
      },
      {
        "name": "AddToPlayerInventory",
        "comment": "Add foliage to player inventory from the component",
        "returnType": "void"
      },
      {
        "name": "CanPlayerPickupFoliageResource",
        "returnType": "bool"
      },
      {
        "name": "PlayEffect",
        "comment": "Play pickup effect",
        "returnType": "void"
      },
      {
        "name": "AddEquipmentActionBindings",
        "comment": "~ Begin AFGEquipment interface",
        "returnType": "void"
      },
      {
        "name": "GetStaticMesh",
        "comment": "returns the static mesh of whatever the hell it is this is i hate this",
        "returnType": "UStaticMesh*"
      },
      {
        "name": "IsChainsawableActor",
        "comment": "returns true if actor is a chainsawable actor, duh",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "mFuelClass",
        "comment": "The fuel we want to be able to use with the chainsaw",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "mEnergyConsumption",
        "comment": "How much energy the chainsaw consumes. In megawatt seconds (MWs)",
        "type": "float"
      },
      {
        "name": "mSawDownTreeTime",
        "comment": "How many seconds should it take to saw down a tree",
        "type": "float"
      },
      {
        "name": "mCollateralPickupRadius",
        "comment": "How large radius of automatic pick up of foliage is when using chainsaw",
        "type": "float"
      },
      {
        "name": "mExcludeChainsawableFoliage",
        "comment": "If collateral pickups should exclude chainsawable foliage when using chainsaw",
        "type": "bool"
      },
      {
        "name": "mEnergyStored",
        "comment": "then this is the energy stored here)\n",
        "type": "float"
      },
      {
        "name": "mSawingProgress",
        "comment": "How much progress we have done when sawing on a tree",
        "type": "float"
      },
      {
        "name": "mSawingInstance",
        "comment": "Instance we are currently sawing on",
        "type": "int32"
      },
      {
        "name": "mSawingComponent",
        "comment": "Component we are currently sawing on",
        "type": "classUSceneComponent*"
      },
      {
        "name": "mIsSawing",
        "comment": "if true, then we are using the chainsaw",
        "type": "uint8"
      },
      {
        "name": "mIsSpinningUp",
        "comment": "if true, then we are spinning the chainsaw up",
        "type": "uint8"
      }
    ]
  }
]