[
  {
    "kind": "class",
    "name": "UFGAISystem",
    "category": "UCLASS",
    "comment": "@todoai: Expose tick to BP here, as it might be interesting for modders to use",
    "extends": [
      "UAISystem",
      "FTickableGameObject"
    ],
    "methods": [
      {
        "name": "UFGAISystem",
        "comment": "ctor"
      },
      {
        "name": "InitializeActorsForPlay",
        "comment": "BEGIN UAISystemBase interface",
        "returnType": "void"
      },
      {
        "name": "Tick",
        "comment": "BEGIN FTickableGameObject interface",
        "returnType": "void"
      },
      {
        "name": "IsTickable",
        "returnType": "bool"
      },
      {
        "name": "GetStatId",
        "returnType": "TStatId"
      },
      {
        "name": "GetDisablePawnMovement",
        "comment": "END FTickableGameObject interface",
        "returnType": "bool"
      },
      {
        "name": "GetCurrentFG",
        "comment": "Get the current FGAI system",
        "returnType": "UFGAISystem*"
      },
      {
        "name": "GetCurrentFGSafe",
        "comment": "Get the current FGAI system",
        "returnType": "UFGAISystem*"
      },
      {
        "name": "TickSpawners",
        "comment": "Check spawners proximity to players",
        "returnType": "void"
      },
      {
        "name": "AddToTargetableList",
        "comment": "Addes this aggro target as a global aggro target",
        "returnType": "void"
      },
      {
        "name": "RemoveFromTargetableList",
        "comment": "Removes this aggro target as a global aggro target",
        "returnType": "void"
      },
      {
        "name": "GetAggroTargetList",
        "comment": "Get all available aggro targets",
        "returnType": "TArray<classTScriptInterface<IFGAggroTargetInterface>>&"
      },
      {
        "name": "ClearAllPardonedActors",
        "comment": "Removes all actors from the pardoned list",
        "returnType": "void"
      },
      {
        "name": "PardonActor",
        "comment": "Give pardon to a actor",
        "returnType": "void"
      },
      {
        "name": "UnpardonActor",
        "comment": "removes pardon from an actor",
        "returnType": "void"
      },
      {
        "name": "IsActorPardoned",
        "comment": "Is this actor pardoned from being targeted?",
        "returnType": "bool"
      },
      {
        "name": "AddToTargetableListImp",
        "comment": "Adds a aggro target to the targetable list",
        "returnType": "void"
      },
      {
        "name": "RemoveFromTargetableListImp",
        "comment": "Removes a aggro target to the targetable list",
        "returnType": "void"
      },
      {
        "name": "OnActorSpawned",
        "comment": "Used to keep track of when aggro targets is spawned",
        "returnType": "void"
      },
      {
        "name": "AggroTargetDestroyed",
        "comment": "Called when a aggro target is destroyed",
        "returnType": "void"
      },
      {
        "name": "CreatureDestroyed",
        "comment": "Called when a creature is destroyed",
        "returnType": "void"
      },
      {
        "name": "PlayerDestroyed",
        "comment": "Called when a player is destroyed",
        "returnType": "void"
      },
      {
        "name": "FindClosestPlayerSq",
        "comment": "Find the closest player sq for a creature",
        "returnType": "float"
      }
    ],
    "properties": [
      {
        "name": "mOnAggroTargetAdded",
        "comment": "Called whenever a aggro target is added",
        "type": "FAggroTargetAddedSignature"
      },
      {
        "name": "mOnAggroTargetRemoved",
        "comment": "Called whenever a aggro target is removed",
        "type": "FAggroTargetRemovedSignature"
      },
      {
        "name": "mDisableAIDistance",
        "comment": "distance for disabling an enemys AI",
        "type": "float"
      },
      {
        "name": "mNavWalkingDistance",
        "comment": "distance when we switch movement mode on creatures to PHYS_NavWalking",
        "type": "float"
      },
      {
        "name": "mMeshTickEnableDistance",
        "comment": "distance when we completely remove ticking on mesh",
        "type": "float"
      },
      {
        "name": "mMeshUpdateDistance",
        "comment": "distance when we switch tick mode on mesh to Tick Only when Rendered",
        "type": "float"
      },
      {
        "name": "mActivateSpawnerDistance",
        "comment": "Distance for when we should activate a spawner",
        "type": "float"
      },
      {
        "name": "mDisablePawnMovement",
        "comment": "Indicates if we also want to disable pawn movement when we disable the AI",
        "type": "bool"
      },
      {
        "name": "mAllAggroTargets",
        "comment": "Cached list of all aggro targets, not guaranteed to have the same order",
        "type": "TArray<classTScriptInterface<classIFGAggroTargetInterface>>"
      },
      {
        "name": "mAllCreatures",
        "comment": "Cached list of all enemies, used for optimizing enemies depending on distance",
        "type": "TArray<classAFGCreature*>"
      },
      {
        "name": "mAllPlayers",
        "comment": "Cached list of all players, used for checking distance to all enemies",
        "type": "TArray<classAFGCharacterPlayer*>"
      },
      {
        "name": "mAllCreatureSpawners",
        "comment": "Cached list of all enemy spawners. Used to spawn enemies based on distance to player",
        "type": "TArray<classAFGCreatureSpawner*>"
      },
      {
        "name": "mPardonedActors",
        "comment": "Actors that have been given pardon from being targeted by enemies",
        "type": "TArray<AActor*>"
      },
      {
        "name": "mCreatureIterator",
        "comment": "Iterator for current index in the creatures array",
        "type": "int32"
      },
      {
        "name": "mSpawnerIterator",
        "comment": "Iterator for current index in the creature spawner array",
        "type": "int32"
      },
      {
        "name": "mMaxCreatureIterationsPerTick",
        "comment": "How many creatures can we iterate over per tick",
        "type": "int32"
      },
      {
        "name": "mMaxSpawnerIterationsPerTick",
        "comment": "How many spawners can we iterate over per tick",
        "type": "int32"
      }
    ]
  }
]