[
  {
    "kind": "class",
    "name": "AFGBuildableTradingPost",
    "category": "UCLASS",
    "comment": "The trading post, it has N inputs and sells inputed items for money.",
    "extends": [
      "AFGBuildableFactory"
    ],
    "methods": [
      {
        "name": "AFGBuildableTradingPost"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "CanBeSampled_Implementation",
        "comment": "~ Begin AFGBuildable interface",
        "returnType": "bool"
      },
      {
        "name": "PostLoadGame_Implementation",
        "comment": "~ End AFGBuildable interface",
        "returnType": "void"
      },
      {
        "name": "Dismantle_Implementation",
        "comment": "~ Begin IFGDismantleInterface",
        "returnType": "void"
      },
      {
        "name": "GetDismantleRefund_Implementation",
        "returnType": "void"
      },
      {
        "name": "StartIsLookedAtForDismantle_Implementation",
        "returnType": "void"
      },
      {
        "name": "StopIsLookedAtForDismantle_Implementation",
        "returnType": "void"
      },
      {
        "name": "OnTradingPostUpgraded",
        "comment": "Upgrading the trading post to specified level",
        "returnType": "void"
      },
      {
        "name": "UpdateGeneratorVisibility",
        "comment": "Handles the generators visibility depending on tutorial step",
        "returnType": "void"
      },
      {
        "name": "UpdateStorageVisibility",
        "comment": "Handles the storage visibility depending on tutorial step",
        "returnType": "void"
      },
      {
        "name": "GetStorageInventory",
        "comment": "Returns the inventory component used in the storage box",
        "returnType": "UFGInventoryComponent*"
      },
      {
        "name": "GetTradingPostLevel",
        "comment": "Returns level of trading post upgrade",
        "returnType": "int32"
      },
      {
        "name": "PlayBuildEffects",
        "comment": "Make sure to call the build effect on all visible buildings",
        "returnType": "void"
      },
      {
        "name": "ExecutePlayBuildEffects",
        "returnType": "void"
      },
      {
        "name": "PlayBuildEffectsOnAllClients",
        "returnType": "void"
      },
      {
        "name": "AreChildBuildingsLoaded",
        "comment": "Checks if all child buildings are created so that we can use them",
        "returnType": "bool"
      },
      {
        "name": "ValidateSubBuildings",
        "comment": "Called by hologram when finishing constructing child buildings to make sure they're setup",
        "returnType": "void"
      },
      {
        "name": "GetAllActiveSubBuildings",
        "returnType": "TArray<AActor*>"
      },
      {
        "name": "OnBuildEffectFinished",
        "returnType": "void"
      },
      {
        "name": "TogglePendingDismantleMaterial",
        "returnType": "void"
      },
      {
        "name": "OnRep_HAXX_SubbuildingReplicated",
        "comment": "HAXX: For those that has sampled subbuildings, we tag them with a actor tag so that we know that they are not samplable",
        "returnType": "void"
      },
      {
        "name": "AdjustPlayerSpawnsToGround",
        "comment": "Adjust all child actor components that spawning a AFGPlayerStartTradingPost to the ground",
        "returnType": "void"
      },
      {
        "name": "GetSchematicManager",
        "comment": "Returns the cached schematic manager",
        "returnType": "classAFGSchematicManager*"
      },
      {
        "name": "OnRep_NeedPlayingBuildEffect",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mDefaultGeneratorRecipe",
        "comment": "Class of generators to create with the trading post",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "mGenerators",
        "comment": "References to the created generators",
        "type": "TArray<AFGBuildableGenerator*>"
      },
      {
        "name": "mDefaultStorageRecipe",
        "comment": "@todo Why are these recipes and not only TSubclassOf<AFGBuildable>? This seems like a lot of setup just for the extra buildables? Hologram can be created for buildables as well and not just recipes!\nClass of storage to create with the trading post",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "mDefaultHubTerminalRecipe",
        "comment": "Class of hub terminal to create with the trading post",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "mDefaultWorkBenchRecipe",
        "comment": "Class of work bench to create with the trading post",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "mStorage",
        "comment": "References to the created storage",
        "type": "classAFGBuildable*"
      },
      {
        "name": "mHubTerminal",
        "comment": "References to the created Hub Terminal",
        "type": "classAFGBuildableHubTerminal*"
      },
      {
        "name": "mWorkBench",
        "comment": "References to the created work bench",
        "type": "classAFGBuildable*"
      },
      {
        "name": "mGeneratorVisibilityLevels",
        "comment": "Arrays containing ints for what level  we should activate/show the generator",
        "type": "TArray<int32>"
      },
      {
        "name": "mStorageInventorySize",
        "comment": "Size of the storage box",
        "type": "int32"
      },
      {
        "name": "mStorageVisibilityLevel",
        "comment": "At what trading post level should the storage be visible",
        "type": "int32"
      },
      {
        "name": "mInputInventory",
        "comment": "Our input inventory where items are stored before put on ship",
        "type": "classUFGInventoryComponent*"
      },
      {
        "name": "mSpawningGroundZOffset",
        "comment": "How far above the ground the spawn-points should be adjusted",
        "type": "float"
      },
      {
        "name": "mGroundSearchZDistance",
        "comment": "How much up and down we should search for the ground around all child actors that's spawning AFGPlayerStartTradingPost",
        "type": "float"
      },
      {
        "name": "mSchematicManager",
        "comment": "A cached schematic manager",
        "type": "classAFGSchematicManager*"
      },
      {
        "name": "mStorageInventory",
        "comment": "The inventory to store everything in.",
        "type": "classUFGInventoryComponent*"
      },
      {
        "name": "mDefaultResources",
        "comment": "The starting resources in the tradingpost storage",
        "type": "TArray<FItemAmount>"
      },
      {
        "name": "mGenerator1Location",
        "comment": "Component used to determine generators location",
        "type": "USceneComponent*"
      },
      {
        "name": "mGenerator2Location",
        "comment": "Component used to determine generators location",
        "type": "USceneComponent*"
      },
      {
        "name": "mStorageLocation",
        "comment": "Component used to determine storage location",
        "type": "USceneComponent*"
      },
      {
        "name": "mHubTerminalLocation",
        "comment": "Component used to determine Hub terminal location",
        "type": "USceneComponent*"
      },
      {
        "name": "mWorkBenchLocation",
        "comment": "Component used to determine work bench terminal location",
        "type": "USceneComponent*"
      },
      {
        "name": "mNeedPlayingBuildEffectNotification",
        "comment": "Bool to sync playing of build and upgrade effects",
        "type": "bool"
      }
    ]
  }
]