[
  {
    "kind": "class",
    "name": "FSchematicCost",
    "category": "USTRUCT",
    "comment": "Holds info about a schematic and How much has been paid of on it.",
    "extends": [],
    "methods": [],
    "properties": [
      {
        "name": "Schematic",
        "type": "TSubclassOf<UFGSchematic>"
      },
      {
        "name": "ItemCost",
        "comment": "Amount paid off",
        "type": "TArray<FItemAmount>"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGSchematicManager",
    "category": "UCLASS",
    "comment": "Keeps track of everything regarding schematics",
    "extends": [
      "AFGSubsystem",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "Get",
        "comment": "Get the schematic manager, this should always return something unless you call it really early.",
        "returnType": "AFGSchematicManager*"
      },
      {
        "name": "Get",
        "comment": "Get the schematic manager from a world context, this should always return something unless you call it really early.",
        "returnType": "AFGSchematicManager*"
      },
      {
        "name": "GetTechTier",
        "comment": "Get the tech tier of a not loaded schematic asset",
        "returnType": "int32"
      },
      {
        "name": "GetIncludedInBuild",
        "comment": "Get if a asset should be included in build of a not loaded schematic asset",
        "returnType": "EIncludeInBuilds"
      },
      {
        "name": "AFGSchematicManager"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "~ Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "PreInitializeComponents",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "Tick",
        "returnType": "void"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "GetAvailableSchematics",
        "comment": "Returns the available schematics in the game.",
        "returnType": "void"
      },
      {
        "name": "GetPurchasedSchematicsOfTypes",
        "comment": "Returns the schematics the players have purchased of the given types.",
        "returnType": "void"
      },
      {
        "name": "GetAllPurchasedSchematics",
        "comment": "Returns all schematics the players have purchased.",
        "returnType": "void"
      },
      {
        "name": "GetAllSchematics",
        "comment": "Returns every possible schematic that is in the game.",
        "returnType": "void"
      },
      {
        "name": "GetAllSchematicsOfType",
        "comment": "Returns all schematics of a type.",
        "returnType": "void"
      },
      {
        "name": "GetAllSchematicsOfTypeFilteredOnDependency",
        "comment": "Returns all schematics of a type that have any of their dependencies met.",
        "returnType": "void"
      },
      {
        "name": "IsSchematicPurchased",
        "comment": "returns true if the passed schematic has been purchased",
        "returnType": "bool"
      },
      {
        "name": "GiveAccessToSchematic",
        "comment": "Give the player access to a schematic",
        "returnType": "void"
      },
      {
        "name": "AddAvailableSchematic",
        "comment": "adds a schematic to available schematics",
        "returnType": "void"
      },
      {
        "name": "GetCostFor",
        "comment": "Gives you the base cost, after random, for a schematic",
        "returnType": "TArray<FItemAmount>"
      },
      {
        "name": "GetRemainingCostFor",
        "comment": "Returns remaining cost for a certain schematic",
        "returnType": "TArray<FItemAmount>"
      },
      {
        "name": "GetPaidOffCostFor",
        "comment": "Returns how much the players has paid off on a schematic",
        "returnType": "TArray<FItemAmount>"
      },
      {
        "name": "IsSchematicPaidOff",
        "comment": "Returns how much the players has paid off on a schematic",
        "returnType": "bool"
      },
      {
        "name": "PayOffOnSchematic",
        "comment": "Adds paid off amount on a schematic",
        "returnType": "bool"
      },
      {
        "name": "SetActiveSchematic",
        "comment": "Sets the new active schematic to sell stuff towards",
        "returnType": "bool"
      },
      {
        "name": "CanSetAsActiveSchematic",
        "comment": "Can we set the passed schematic as the active one?",
        "returnType": "bool"
      },
      {
        "name": "GetActiveSchematic",
        "comment": "Get active Schematic.",
        "returnType": "TSubclassOf<UFGSchematic>"
      },
      {
        "name": "LaunchShip",
        "comment": "Player initiated launch of the ship",
        "returnType": "void"
      },
      {
        "name": "IsShipAtTradingPost",
        "comment": "Returns true if the ship is at the trading post",
        "returnType": "bool"
      },
      {
        "name": "GetTimeUntilShipReturn",
        "comment": "Returns the time until the ship is back",
        "returnType": "float"
      },
      {
        "name": "GetHighestAvailableTechTier",
        "returnType": "int32"
      },
      {
        "name": "GetDefaultMaxAllowedTechTier",
        "comment": "Get the default tech tier from the default schematics manager",
        "returnType": "int32"
      },
      {
        "name": "GetMaxAllowedTechTier",
        "returnType": "int32"
      },
      {
        "name": "ResetSchematicsOfType",
        "comment": "Resets schematics to their defaults. Used for resetting specific progressions for testing.",
        "returnType": "void"
      },
      {
        "name": "FixupSave_FindBuiltByRecipe",
        "comment": "Used to fix up old saves that are missing the built with recipe.",
        "returnType": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "Debug_DumpStateToLog",
        "comment": "Debug stuff",
        "returnType": "void"
      },
      {
        "name": "Debug_GetAllRecipes",
        "returnType": "TArray<TSubclassOf<classUFGRecipe>>"
      },
      {
        "name": "PopulateSchematicsLists",
        "comment": "Populate list with all schematics",
        "returnType": "void"
      },
      {
        "name": "PopulateAvailableSchematicsList",
        "comment": "Populate list with the default available schematics.",
        "returnType": "void"
      },
      {
        "name": "OnRep_ActiveSchematic",
        "returnType": "void"
      },
      {
        "name": "OnRep_PurchasedSchematic",
        "returnType": "void"
      },
      {
        "name": "OnRep_PaidOffOnSchematic",
        "returnType": "void"
      },
      {
        "name": "FindHighestAvailableTechTier",
        "comment": "Returns the highest tech tier available in lists",
        "returnType": "int32"
      },
      {
        "name": "FindSchematicPayOff",
        "comment": "Find or remove a given schematic in the pay off schematic list.",
        "returnType": "FSchematicCost*"
      },
      {
        "name": "AddSchematicPayOff",
        "returnType": "void"
      },
      {
        "name": "RemoveSchematicPayOff",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "PurchasedSchematicDelegate",
        "comment": "Called when we players are granted a schematic.",
        "type": "FPurchasedSchematicDelegate"
      },
      {
        "name": "PaidOffOnSchematicDelegate",
        "comment": "Called when a payment on a schematic occurs",
        "type": "FPaidOffOnSchematicDelegate"
      },
      {
        "name": "mAllSchematics",
        "comment": "All schematic assets that have been sucked up in the PopulateSchematicsList function. Contains cheats and all sort of schematic.",
        "type": "TArray<TSubclassOf<UFGSchematic>>"
      },
      {
        "name": "mAvailableSchematics",
        "comment": "All schematics that are available to the player",
        "type": "TArray<TSubclassOf<UFGSchematic>>"
      },
      {
        "name": "mPurchasedSchematics",
        "comment": "Once schematic is purchased it ends up here",
        "type": "TArray<TSubclassOf<UFGSchematic>>"
      },
      {
        "name": "mPaidOffSchematic",
        "comment": "This keeps track of what players have paid off on different schematics",
        "type": "TArray<FSchematicCost>"
      },
      {
        "name": "mActiveSchematic",
        "comment": "The active schematic the resources is being sold towards.",
        "type": "TSubclassOf<UFGSchematic>"
      },
      {
        "name": "mOnActiveSchematicChanged",
        "comment": "Called when we the schematic has been changed .",
        "type": "FOnActiveSchematicChanged"
      },
      {
        "name": "mShipLandTimeStamp",
        "comment": "Time stamp for when the ship is gonna land back at the Trading Post.",
        "type": "float"
      },
      {
        "name": "mShipLandTimeStampSave",
        "comment": "Used to save the ship land timestamp",
        "type": "float"
      },
      {
        "name": "mHasTechTierLimit",
        "type": "bool"
      },
      {
        "name": "mMaxAllowedTechTier",
        "type": "int32"
      },
      {
        "name": "mIsShipAtTradingPost",
        "comment": "Internal bool to keep track of the state of the ship",
        "type": "bool"
      },
      {
        "name": "mShipReturnedMessage",
        "comment": "Message sent when trading post ship has returned",
        "type": "TSubclassOf<classUFGMessageBase>"
      }
    ]
  }
]