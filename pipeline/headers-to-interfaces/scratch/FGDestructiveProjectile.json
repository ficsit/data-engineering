[
  {
    "kind": "class",
    "name": "FDestroyedFoliageEffectData",
    "category": "USTRUCT",
    "comment": "Holds the information necessary for spawning destroyed effects after all overlap calculations",
    "extends": [],
    "methods": [
      {
        "name": "FDestroyedFoliageEffectData"
      },
      {
        "name": "FDestroyedFoliageEffectData"
      },
      {
        "name": "operator<",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "SpawnLocation",
        "type": "FVector"
      },
      {
        "name": "DestroyedEffect",
        "type": "classUParticleSystem*"
      },
      {
        "name": "Priority",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGDestructiveProjectile",
    "category": "UCLASS",
    "comment": " Base class for any projectile that should destroy foliage or actors\n@todo: Optimize to collect overlapped foliage if attached to a static actor so that we don't need to populate on detonate",
    "extends": [
      "AFGProjectile"
    ],
    "methods": [
      {
        "name": "AFGDestructiveProjectile"
      },
      {
        "name": "PostInitializeComponents",
        "comment": "Actor initialization",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "OnImpact",
        "comment": "handle hit override, calls super",
        "returnType": "void"
      },
      {
        "name": "GetDesctructionCollisionComponent",
        "returnType": "classUSphereComponent*"
      },
      {
        "name": "PopulateDestructionContainers",
        "returnType": "void"
      },
      {
        "name": "DealExplosionDamage",
        "comment": "trigger explosion",
        "returnType": "void"
      },
      {
        "name": "HandleFoliageDestruction",
        "comment": "Handle the destruction and removal of foliage",
        "returnType": "void"
      },
      {
        "name": "HandleActorDestruction",
        "comment": "Handle the destruction of actors that meet the criteria",
        "returnType": "void"
      },
      {
        "name": "OnNotifiedExploded",
        "comment": "[client] explosion has happened, called by OnRep_Exploded will spawn client side particle effects\nThis removes the need for the server to broadcast all transforms and particle systems on detonation",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mDestructionCollisionComp",
        "comment": "Collision Component used to determine which objects should be considered for destruction",
        "type": "classUSphereComponent*"
      },
      {
        "name": "mDestroysRelevantActors",
        "comment": "Should actors implementing destructable interfaces be considered for destruction",
        "type": "bool"
      },
      {
        "name": "mDestroysFoliage",
        "comment": "Should foliage be considered for destruction",
        "type": "bool"
      },
      {
        "name": "mMaxParticleSpawnsPerDetonation",
        "comment": "Any amount of particle systems over this limit will not be spawned",
        "type": "int32"
      },
      {
        "name": "mOverlappedHISMComponents",
        "comment": "Holds a list of all overlapped foliage mesh components (HierarchicalInstancedStaticMesh) with the blast radius",
        "type": "TArray<classUHierarchicalInstancedStaticMeshComponent*>"
      },
      {
        "name": "mRelevantOverlappedActors",
        "comment": "Holds a list of all actors within the blast radius implementing IFGExplosiveDestructableInterface",
        "type": "TArray<AActor*>"
      }
    ]
  }
]