[
  {
    "kind": "enum",
    "name": "EHorizontalSignTextAlignment",
    "comment": "Copyright 2016-2019 Coffee Stain Studios. All Rights Reserved.",
    "entries": [
      {
        "name": "EHSTA_Left",
        "displayName": "Left"
      },
      {
        "name": "EHSTA_Center",
        "displayName": "Center"
      },
      {
        "name": "EHSTA_Right",
        "displayName": "Right"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "ESignElementType",
    "entries": [
      {
        "name": "ESET_Scene",
        "displayName": "Scene Component"
      },
      {
        "name": "ESET_Text",
        "displayName": "Text Input"
      },
      {
        "name": "ESET_SpriteIcon",
        "displayName": "Image"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FSignElementConstraints",
    "category": "USTRUCT",
    "extends": [],
    "methods": [
      {
        "name": "FSignElementConstraints"
      }
    ],
    "properties": [
      {
        "name": "MinTranslationOffset",
        "type": "FVector2D"
      },
      {
        "name": "MaxTranslationOffset",
        "type": "FVector2D"
      },
      {
        "name": "MinScale",
        "type": "float"
      },
      {
        "name": "MaxScale",
        "type": "float"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FSignPixelColumn",
    "category": "USTRUCT",
    "extends": [],
    "methods": [
      {
        "name": "FSignPixelColumn"
      },
      {
        "name": "FSignPixelColumn"
      },
      {
        "name": "operator[]",
        "returnType": "classUFGSignPixelData*"
      }
    ],
    "properties": [
      {
        "name": "Column",
        "type": "TArray<classUFGSignPixelData*>"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGSignLayer",
    "category": "UCLASS",
    "extends": [
      "UObject",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "UFGSignLayer"
      },
      {
        "name": "NeedTransform_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "Init",
        "comment": "End IFSaveInterface",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mLayerID",
        "comment": "Layer index, used to determine sorting. Layer 0 is the background layer",
        "type": "uint8"
      },
      {
        "name": "mPixelColumns",
        "type": "TArray<FSignPixelColumn>"
      },
      {
        "name": "mLayerElements",
        "type": "TArray<classUFGSignElementData*>"
      },
      {
        "name": "mPixelDimensions",
        "type": "FVector2D"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGSignElementData",
    "category": "UCLASS",
    "comment": "@todoSigns : Change all blueprint read / write properties over to getters / setters where applicable",
    "extends": [
      "UObject",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "UFGSignElementData"
      },
      {
        "name": "UFGSignElementData"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "mSignElementID",
        "comment": "unique id to identify this element by buildable signs",
        "type": "int32"
      },
      {
        "name": "mColorIndex",
        "comment": "Index pointing to a location in the FGSignSettings Color Array",
        "type": "int32"
      },
      {
        "name": "mTranslationOffset",
        "comment": "Position offset from center",
        "type": "FVector2D"
      },
      {
        "name": "mRotation",
        "comment": "Roll Rotation",
        "type": "float"
      },
      {
        "name": "mScale",
        "comment": "Global uniform scale factor",
        "type": "float"
      },
      {
        "name": "mEmbeddedInLayer",
        "comment": "If embedded, this indicates that the element should not be given its own element list widget ( tex. the background pixels in layers )",
        "type": "bool"
      },
      {
        "name": "mIsElementStatic",
        "type": "bool"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGSignPixelData",
    "category": "UCLASS",
    "extends": [
      "UFGSignElementData"
    ],
    "methods": [
      {
        "name": "UFGSignPixelData"
      },
      {
        "name": "UFGSignPixelData"
      }
    ],
    "properties": [
      {
        "name": "mDimensions",
        "type": "FVector2D"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGSignTextData",
    "category": "UCLASS",
    "extends": [
      "UFGSignElementData"
    ],
    "methods": [
      {
        "name": "UFGSignTextData"
      },
      {
        "name": "UFGSignTextData"
      }
    ],
    "properties": [
      {
        "name": "mSignText",
        "comment": "Text field to be displayed on the sign",
        "type": "FString"
      },
      {
        "name": "mFontSize",
        "type": "int32"
      },
      {
        "name": "mTextAlignmentHorizontal",
        "comment": "Text align horizontal",
        "type": "EHorizontalSignTextAlignment"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGSignIconData",
    "category": "UCLASS",
    "extends": [
      "UFGSignElementData"
    ],
    "methods": [
      {
        "name": "UFGSignIconData"
      },
      {
        "name": "UFGSignIconData"
      }
    ],
    "properties": [
      {
        "name": "mIconIndex",
        "comment": "Index pointing to a location in the FGSignSettings Icon array",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FSignData",
    "category": "USTRUCT",
    "extends": [],
    "methods": [
      {
        "name": "FSignData"
      },
      {
        "name": "FSignData",
        "comment": "Copy Constructor, outer is set to ensure proper save integration (thus the copy must contain a valid reference to the buildable as outer)"
      },
      {
        "name": "GetAllElementsOfType",
        "returnType": "void"
      },
      {
        "name": "Init",
        "comment": "First time Initialization. Should be called by owning buildable to prepare the data elements neccessary",
        "returnType": "void"
      },
      {
        "name": "Serialize",
        "comment": "Function called when serializing this struct to a FArchive.",
        "returnType": "bool"
      },
      {
        "name": "operator<<",
        "returnType": "FArchive&"
      },
      {
        "name": "GetElementWithId",
        "returnType": "UFGSignElementData*"
      }
    ],
    "properties": [
      {
        "name": "SignLayers",
        "comment": "All additional layers in this sign. Each layer holds an array of all elements in that layer",
        "type": "TArray<UFGSignLayer*>"
      },
      {
        "name": "SignElementData",
        "comment": "All sign elements in this sign",
        "type": "TArray<UFGSignElementData*>"
      },
      {
        "name": "BackgroundColorIndex",
        "comment": "Index of the selected color for the background from the FGSignSettings color data array",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "TStructOpsTypeTraits",
    "comment": "Enable custom serialization of FRailroadTrackPosition",
    "extends": [
      "TStructOpsTypeTraitsBase2"
    ],
    "methods": [],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGSignInterface",
    "category": "UINTERFACE",
    "comment": "Sign Interface",
    "extends": [
      "UInterface"
    ],
    "methods": [],
    "properties": []
  },
  {
    "kind": "class",
    "name": "IFGSignInterface",
    "comment": "Interface for Sign Buildables to be able to communicate with UI",
    "extends": [],
    "methods": [
      {
        "name": "GetBuildable",
        "returnType": "AFGBuildable*"
      },
      {
        "name": "SetSignData",
        "comment": "Sets the sign data with optional update parameter",
        "returnType": "void"
      },
      {
        "name": "GetSignData",
        "comment": "Returns the implementing classes current sign data",
        "returnType": "FSignData"
      },
      {
        "name": "GetAvailableElementID",
        "comment": "Return a valid unique ID specifier used when adding a new sign element\n@note Unique is the key word there. It must be.",
        "returnType": "int32"
      },
      {
        "name": "GetSignDimensions",
        "comment": "Get the world scale dimensions (width / height) of the sign\n@note from world space Y maps to X and Z maps to Y in the return value",
        "returnType": "FVector2D"
      },
      {
        "name": "GetGridSquareDimensions",
        "comment": "Get the dimensions of the grid size ( the size of 1 grid square )\nIs used for creating \"pixel\" layouts on each layer",
        "returnType": "FVector2D"
      }
    ],
    "properties": []
  }
]