[
  {
    "kind": "class",
    "name": "SFGCheatBoardWidget",
    "comment": "Copyright 2016 Coffee Stain Studios.All Rights Reserved.",
    "extends": [
      "SCompoundWidget"
    ],
    "methods": [
      {
        "name": "SLATE_BEGIN_ARGS",
        "comment": "Cache the cheat manager"
      },
      {
        "name": "SLATE_ARGUMENT"
      },
      {
        "name": "SLATE_END_ARGS"
      },
      {
        "name": "Construct",
        "comment": "Constructs the base Slate UI",
        "returnType": "void"
      },
      {
        "name": "OnKeyDown",
        "comment": "Catch input in this widget",
        "returnType": "FReply"
      },
      {
        "name": "SupportsKeyboardFocus",
        "comment": "Overloaded to be able to take keyboard focus",
        "returnType": "bool"
      },
      {
        "name": "CloseCheatBoard",
        "comment": "Shut it down",
        "returnType": "void"
      },
      {
        "name": "OnFocusReceived",
        "returnType": "FReply"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "This is just the base, that is supposed to show propts for the user to input data.\nthis is overloaded per property type",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user with true and false inputs",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user with true and false inputs",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user to input a resource class",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user to input a text, FString or UText. (No FName yet)",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user to input a color",
        "returnType": "void"
      },
      {
        "name": "ShowInputWindowFor",
        "comment": "Propmts the user to select an enum vlaue",
        "returnType": "void"
      },
      {
        "name": "SetFilterTextboxFocus",
        "returnType": "void"
      },
      {
        "name": "ResetMenu",
        "returnType": "void"
      },
      {
        "name": "ShowMenu",
        "returnType": "void"
      },
      {
        "name": "GetAllCheats",
        "comment": "This finds all the functions in UFGCheatManager",
        "returnType": "TArray<UFunction*>"
      },
      {
        "name": "OnCheatClicked",
        "comment": "\n @ param func - The cheat function the player clicked",
        "returnType": "FReply"
      },
      {
        "name": "OnCheatFavoriteToggle",
        "returnType": "FReply"
      },
      {
        "name": "OnInputTextCommited",
        "comment": "Called when the players commits text in the input window",
        "returnType": "void"
      },
      {
        "name": "OnInputFilterKeyDown",
        "returnType": "FReply"
      },
      {
        "name": "OnInputFilterChanged",
        "returnType": "void"
      },
      {
        "name": "OnInputFilterCommited",
        "comment": "Called when the players commits text in the input window",
        "returnType": "void"
      },
      {
        "name": "OnClearFilter",
        "returnType": "FReply"
      },
      {
        "name": "OnHoverClearFilter",
        "returnType": "void"
      },
      {
        "name": "applyFilterWithFilterString",
        "returnType": "void"
      },
      {
        "name": "OnBoolParm",
        "comment": "If the user presses on true or false, this triggers and gives us the value",
        "returnType": "FReply"
      },
      {
        "name": "OnClassParm",
        "comment": "If the user presses on a resource, this triggers and gives us the value",
        "returnType": "FReply"
      },
      {
        "name": "OnNumInputClicked",
        "comment": "If the user presses on true or false, this triggers and gives us the value",
        "returnType": "FReply"
      },
      {
        "name": "OnClassParmAction",
        "returnType": "void"
      },
      {
        "name": "OnSetColorFromColorPicker",
        "comment": "Result from the colorpicker",
        "returnType": "void"
      },
      {
        "name": "GetNextProperty",
        "comment": "Get the next property for mFunctionWaitingForParms, where the current is mPropertyWaitingForInput",
        "returnType": "UProperty*"
      },
      {
        "name": "CheatMenu_OnGenerateRow",
        "comment": "Called to generate a widget for the specified tree item",
        "returnType": "TSharedRef<ITableRow>"
      },
      {
        "name": "GetVisibleChildren",
        "returnType": "void"
      },
      {
        "name": "CheatMenu_OnGetChildren",
        "comment": "Given a tree item, fills an array of child items",
        "returnType": "void"
      },
      {
        "name": "CheatMenu_OnSelectionChanged",
        "comment": "Called when the user clicks on an  item, or when selection changes by some other means",
        "returnType": "void"
      },
      {
        "name": "CheatMenu_OnMouseClick",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mCachedCheatManager",
        "comment": "Our cached cheat manager",
        "type": "TWeakObjectPtr<UFGCheatManager>"
      },
      {
        "name": "mMarkedForDestroy",
        "comment": "Indicates if this widgets want to be destroyed",
        "type": "bool"
      },
      {
        "name": "mCheatButtonSlot",
        "comment": "Cached slot for the list of cheat buttons",
        "type": "SVerticalBox::FSlot*"
      },
      {
        "name": "mInputSlot",
        "comment": "Cached slot for the possible input buttons",
        "type": "SOverlay::FOverlaySlot*"
      },
      {
        "name": "mFunctionWaitingForParms",
        "comment": "This function is waiting for input from the user",
        "type": "UFunction*"
      },
      {
        "name": "mTileTextSlot",
        "type": "SVerticalBox::FSlot*"
      },
      {
        "name": "mTitleTextBox",
        "type": "TSharedPtr<STextBlock>"
      },
      {
        "name": "mFilterTextSlot",
        "type": "SVerticalBox::FSlot*"
      },
      {
        "name": "mFilterTextBox",
        "type": "TSharedPtr<SEditableTextBox>"
      },
      {
        "name": "mFilterClearButton",
        "type": "TSharedPtr<SButton>"
      },
      {
        "name": "mParameters",
        "comment": "but it isn't working. The data in mParameters get jumbled up when\ntrying to write more properties to it",
        "type": "uint8*"
      },
      {
        "name": "mCurrentParameterIndex",
        "type": "uint8"
      },
      {
        "name": "mCurrentCheat",
        "type": "CheatMenuObject*"
      },
      {
        "name": "mPropertyWaitingForInput",
        "comment": "This is the property we asked for input about",
        "type": "UProperty*"
      },
      {
        "name": "mButtonTextStyle",
        "comment": "The textstyle used in this widget",
        "type": "FTextBlockStyle*"
      },
      {
        "name": "mButtonToggleTextStyle",
        "type": "FTextBlockStyle*"
      },
      {
        "name": "mCategoryTextStyle",
        "type": "FTextBlockStyle*"
      },
      {
        "name": "mEditableTextStyle",
        "comment": "The text style in the box where the user inputs shit",
        "type": "FEditableTextBoxStyle*"
      },
      {
        "name": "mButtons",
        "type": "TArray<TSharedRef<SWidget>>"
      },
      {
        "name": "mTreeMenu",
        "type": "TSharedPtr<CheatMenuTreeView>"
      }
    ]
  }
]