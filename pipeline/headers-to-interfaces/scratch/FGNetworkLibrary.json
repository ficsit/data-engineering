[
  {
    "kind": "class",
    "name": "FOnlinePresence",
    "category": "USTRUCT",
    "comment": "Exposes a lot of OSS functionality to blueprint. This drives a lot of the functionality in the join game menu and for invites\n@todo: Migrate UFGPresenceLibrary, UFGFriendsLibrary, UFGSessionLibrary and UFGInviteLibrary into their own .h and .cpp files",
    "extends": [],
    "methods": [
      {
        "name": "FOnlinePresence"
      },
      {
        "name": "FOnlinePresence"
      },
      {
        "name": "IsValid",
        "comment": "Return true if the presence is valid",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "Presence",
        "type": "TSharedPtr<FOnlineUserPresence>"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "ECantJoinReason",
    "entries": [
      {
        "name": "CJR_InvalidGame",
        "displayName": "Invalid Game"
      },
      {
        "name": "CJR_NotInAGame",
        "displayName": "Not in a game"
      },
      {
        "name": "CJR_PlayingOtherGame",
        "displayName": "Playing Other Game"
      },
      {
        "name": "CJR_PrivateGame",
        "displayName": "Private Game"
      },
      {
        "name": "CJR_DifferentVersion",
        "displayName": "Different Version"
      },
      {
        "name": "CJR_FullGame",
        "displayName": "Full Game"
      },
      {
        "name": "CJR_Ok",
        "displayName": "Ok"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FUserFeedbackFrontEndData",
    "category": "USTRUCT",
    "comment": "This is just the data from the feedback widget.",
    "extends": [],
    "methods": [
      {
        "name": "FUserFeedbackFrontEndData"
      }
    ],
    "properties": [
      {
        "name": "isSatisfactory",
        "type": "bool"
      },
      {
        "name": "typeOfFeedback",
        "type": "FString"
      },
      {
        "name": "body",
        "type": "FString"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGPresenceLibrary",
    "category": "UCLASS",
    "comment": "@todosession: We assume we always have cached presence for people. So we need to find where a we don't and it matters (friends-friends, discord invites)",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "IsOnline",
        "comment": "Return true if the presence is online, false if the presence isn't valid",
        "returnType": "bool"
      },
      {
        "name": "GetPresenceFromNetId",
        "comment": "Get the presence of a friend",
        "returnType": "FOnlinePresence"
      },
      {
        "name": "NetIdHasValidPresence",
        "comment": "Get the presence of a friend",
        "returnType": "bool"
      },
      {
        "name": "GetPresenceString",
        "comment": "Get the presence string",
        "returnType": "FString"
      },
      {
        "name": "IsPlayingThisGame",
        "comment": "@return true if the user is playing satisfactory",
        "returnType": "bool"
      },
      {
        "name": "IsPlayingOtherGame",
        "comment": "@return true if the user is playing another game",
        "returnType": "bool"
      },
      {
        "name": "GetSessionFromPresence",
        "comment": "Get the a session for the players presence",
        "returnType": "FBlueprintSessionResult"
      },
      {
        "name": "IsValid_OnlinePresence",
        "comment": "Returns true if a OnlinePresence is valid",
        "returnType": "bool"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGFriendsLibrary",
    "category": "UCLASS",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "EqualEqual_FriendFriend",
        "comment": "@param B - friend to compare with\n@returns True if the friend are the same, false otherwise",
        "returnType": "bool"
      },
      {
        "name": "GetFriendUniqueNetId",
        "comment": "Get the session the current friend is in",
        "returnType": "FUniqueNetIdRepl"
      },
      {
        "name": "GetFriendFromNetId",
        "comment": "Get a friend from a net id",
        "returnType": "FFGOnlineFriend"
      },
      {
        "name": "IsFriendJoinable",
        "comment": "Is the friend joinable publicly",
        "returnType": "TEnumAsByte<ECantJoinReason>"
      },
      {
        "name": "GetFriendName",
        "comment": "@return Get the name of the friend",
        "returnType": "bool"
      },
      {
        "name": "IsWaitingForData",
        "comment": "@return true if the friend is waiting for data, true is bad data is passed in",
        "returnType": "bool"
      },
      {
        "name": "IsValid_Friend",
        "comment": "Returns true if a OnlinePresence is valid",
        "returnType": "bool"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGSessionLibrary",
    "category": "UCLASS",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "GetSessionSettings",
        "comment": "Get the settings from a session",
        "returnType": "FFGOnlineSessionSettings"
      },
      {
        "name": "GetSessionVisibility",
        "comment": "Get the settings from a session",
        "returnType": "TEnumAsByte<ESessionVisibility>"
      },
      {
        "name": "SetSessionVisibility",
        "comment": "@SERVER: Sets the current visibility of the session",
        "returnType": "void"
      },
      {
        "name": "GetMySession",
        "comment": "Get the session information about my session",
        "returnType": "FBlueprintSessionResult"
      },
      {
        "name": "IsInGameSession",
        "comment": "Check if a local player is in a game session",
        "returnType": "bool"
      },
      {
        "name": "IsSessionValid",
        "comment": "return true if the session is valid",
        "returnType": "bool"
      },
      {
        "name": "InOnlineSession",
        "comment": "Check if a local player is in a game session",
        "returnType": "bool"
      },
      {
        "name": "JoinSession",
        "comment": "Join a session gracefully",
        "returnType": "void"
      },
      {
        "name": "GetMaxNumberOfPlayers",
        "comment": "Get the max number of players in a session",
        "returnType": "int32"
      },
      {
        "name": "CheckIsCompatibleVersion",
        "returnType": "bool"
      },
      {
        "name": "UpdateSessionFromSessionSettings",
        "comment": "Native library functions",
        "returnType": "void"
      },
      {
        "name": "SessionSettingsFromSession",
        "returnType": "void"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGInviteLibrary",
    "category": "UCLASS",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "GetInviteSenderUniqueNetId",
        "comment": "Get net id of a invite",
        "returnType": "FUniqueNetIdRepl"
      },
      {
        "name": "GetPendingInvites",
        "comment": "Get invites that's not accepted or rejected",
        "returnType": "void"
      },
      {
        "name": "GetInviteFromSender",
        "comment": "Get invites from a sender",
        "returnType": "FPendingInvite"
      },
      {
        "name": "SendInviteToFriend",
        "comment": "Sends a invite to a friend",
        "returnType": "void"
      },
      {
        "name": "JoinInvite",
        "comment": "Join a pending invite",
        "returnType": "void"
      },
      {
        "name": "DiscardInvite",
        "comment": "Discard a pending invite",
        "returnType": "void"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "UFGNetworkLibrary",
    "category": "UCLASS",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "IsServer",
        "comment": "Return true if this is on a server (playing singleplayer is same as server)\n@param worldContext - a object that we can get the world from",
        "returnType": "bool"
      },
      {
        "name": "OpenWebURL",
        "comment": "@note: DO NOT INCLUDE HTTP:// IN THE URL.\n@return returns true if it succeeds.",
        "returnType": "bool"
      },
      {
        "name": "SubmitFeedback",
        "returnType": "bool"
      },
      {
        "name": "GetNameFromUniqueNetId",
        "comment": "Get the name from a unique net id",
        "returnType": "bool"
      },
      {
        "name": "EqualEqual_NetIdNetId",
        "comment": "Compare two net ids",
        "returnType": "bool"
      },
      {
        "name": "IsValid_UniqueNetId",
        "comment": "Returns true if a UniqueNetId is valid",
        "returnType": "bool"
      },
      {
        "name": "QueryNATType",
        "comment": "Query our current NAT-type",
        "returnType": "void"
      },
      {
        "name": "GetCachedNATType",
        "comment": "Get the last cached value of our NAT-type",
        "returnType": "ECachedNATType"
      },
      {
        "name": "NATTypeToText",
        "returnType": "FText"
      },
      {
        "name": "GetLocalBuildVersion",
        "returnType": "FString"
      },
      {
        "name": "CheckIsCompatibleVersion",
        "returnType": "bool"
      }
    ],
    "properties": []
  }
]