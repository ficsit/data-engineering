[
  {
    "kind": "enum",
    "name": "EIntroTutorialSteps",
    "comment": "Steps in the intro tutorial",
    "entries": [
      {
        "name": "ITS_NONE",
        "displayName": "No tutorial"
      },
      {
        "name": "ITS_INTRO",
        "displayName": "Intro state with message"
      },
      {
        "name": "ITS_DISMANTLE_POD",
        "displayName": "Dismantle drop pod"
      },
      {
        "name": "ITS_STUN_SPEAR",
        "displayName": "Equip stun spear"
      },
      {
        "name": "ITS_IRON_ORE",
        "displayName": "Pick up iron ore"
      },
      {
        "name": "ITS_HUB",
        "displayName": "Build a hub"
      },
      {
        "name": "ITS_HUB_LVL1",
        "displayName": "Upgrade Hub to lvl 1"
      },
      {
        "name": "ITS_HUB_LVL1_5",
        "displayName": "Upgrade Hub to lvl 1.5"
      },
      {
        "name": "ITS_HUB_LVL2",
        "displayName": "Upgrade Hub to lvl 2"
      },
      {
        "name": "ITS_HUB_LVL3",
        "displayName": "Upgrade Hub to lvl 3"
      },
      {
        "name": "ITS_HUB_LVL4",
        "displayName": "Upgrade Hub to lvl 4"
      },
      {
        "name": "ITS_HUB_LVL5",
        "displayName": "Upgrade Hub to lvl 5"
      },
      {
        "name": "ITS_DONE",
        "displayName": "Done with intro"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FRecipeAmountPair",
    "category": "USTRUCT",
    "extends": [],
    "methods": [],
    "properties": [
      {
        "name": "Recipe",
        "comment": "Recipe to give player",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "Amount",
        "comment": "How many of given recipe",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FTutorialHintData",
    "category": "USTRUCT",
    "extends": [],
    "methods": [],
    "properties": [
      {
        "name": "ID",
        "type": "EIntroTutorialSteps"
      },
      {
        "name": "Title",
        "type": "FText"
      },
      {
        "name": "HintTexts",
        "type": "TArray<FText>"
      },
      {
        "name": "Message",
        "type": "TSubclassOf<classUFGMessageBase>"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FFindByIntroID",
    "extends": [],
    "methods": [
      {
        "name": "FFindByIntroID"
      },
      {
        "name": "operator()",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "TutorialStep",
        "type": "EIntroTutorialSteps"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGTutorialIntroManager",
    "category": "UCLASS",
    "extends": [
      "AFGSubsystem",
      "IFGSaveInterface"
    ],
    "methods": [
      {
        "name": "Get",
        "comment": "Get the tutorial intro manager, this should always return something unless you call it really early.",
        "returnType": "AFGTutorialIntroManager*"
      },
      {
        "name": "Get",
        "comment": "Get thetutorial intro manager from a world context, this should always return something unless you call it really early.",
        "returnType": "AFGTutorialIntroManager*"
      },
      {
        "name": "AFGTutorialIntroManager"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "Tick",
        "returnType": "void"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin IFGSaveInterface",
        "returnType": "void"
      },
      {
        "name": "PostSaveGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PreLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "GatherDependencies_Implementation",
        "returnType": "void"
      },
      {
        "name": "NeedTransform_Implementation",
        "returnType": "bool"
      },
      {
        "name": "ShouldSave_Implementation",
        "returnType": "bool"
      },
      {
        "name": "AddPlayer",
        "comment": "A player was added to the game",
        "returnType": "void"
      },
      {
        "name": "OnDismantleDropPod",
        "comment": "Called when the drop pod is dismantled.",
        "returnType": "void"
      },
      {
        "name": "GetIsIntroSequenceDone",
        "returnType": "bool"
      },
      {
        "name": "GetIsTutorialCompleted",
        "comment": "Are we done with the tutorial?",
        "returnType": "bool"
      },
      {
        "name": "GetCurrentTutorialStep",
        "comment": "Gets the current step we are at",
        "returnType": "EIntroTutorialSteps"
      },
      {
        "name": "SetTradingPostLevel",
        "comment": "Sets the tradingpost level to new value",
        "returnType": "void"
      },
      {
        "name": "SetInputGatesFromTutorialLevel",
        "comment": "Based on tutorial progression set player input gates",
        "returnType": "void"
      },
      {
        "name": "GetInputGatesFromTutorialLevel",
        "returnType": "structFDisabledInputGate"
      },
      {
        "name": "SetupDropPod",
        "comment": "Spawns and sets up necessary stuff for the drop pod sequence",
        "returnType": "void"
      },
      {
        "name": "TradingPostWasBuilt",
        "comment": "Do stuff when acknowledging that the tradingpost was build",
        "returnType": "void"
      },
      {
        "name": "StartSkipIntroSequence",
        "returnType": "void"
      },
      {
        "name": "CancelSkipIntroSequence",
        "returnType": "void"
      },
      {
        "name": "EndSkipIntroSequence",
        "returnType": "void"
      },
      {
        "name": "GetNormalizedProgressToSkip",
        "returnType": "float"
      },
      {
        "name": "GetTradingPostLevel",
        "returnType": "int32"
      },
      {
        "name": "CompleteTutorial",
        "comment": "Completes the tutorial",
        "returnType": "void"
      },
      {
        "name": "IntroDone",
        "comment": "Called when the intro cinematic is done @SERVERONLY",
        "returnType": "void"
      },
      {
        "name": "ResetHubTutorial",
        "comment": "Resets the tutorial progression from the ITS_HUB step.",
        "returnType": "void"
      },
      {
        "name": "SetCanSkipTutorialIntro",
        "returnType": "void"
      },
      {
        "name": "GetCanSkipTutorial",
        "returnType": "bool"
      },
      {
        "name": "GiveTutorialResources",
        "comment": "Gives resoures to player that they need to build things they should have built playing the tutorial",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "comment": "Called when the game starts or when spawned",
        "returnType": "void"
      },
      {
        "name": "OnBuildingBuiltGlobal",
        "comment": "Called when the local player builds anything",
        "returnType": "void"
      },
      {
        "name": "OnSchematicPurchased",
        "comment": "Called when a schematic is unlocked",
        "returnType": "void"
      },
      {
        "name": "UpdateTutorial",
        "comment": "Updates progress in the tutorial to next step specified",
        "returnType": "void"
      },
      {
        "name": "HandlePendingTutorials",
        "comment": "Checks if it is time to push out the pending tutorial step",
        "returnType": "void"
      },
      {
        "name": "ClearActiveTutorialHint",
        "comment": "Clears the currently displayed hint widget in hud for when a tutorial step is completed",
        "returnType": "void"
      },
      {
        "name": "OnPlayerAddedItemToInventory",
        "comment": "Called when a player gets an item in its inventory",
        "returnType": "void"
      },
      {
        "name": "OnPlayerAddedItemToArmSlot",
        "comment": "Called when a player gets an item in its arm slot",
        "returnType": "void"
      },
      {
        "name": "SetTradingpostBuilt",
        "comment": "Sets the status of mTradingPostBuilt",
        "returnType": "void"
      },
      {
        "name": "HasTradingpostBeenBuilt",
        "comment": "Checks if a tradingpost has ever been built",
        "returnType": "bool"
      },
      {
        "name": "OnIntroDone",
        "comment": "Called from IntroDone and only once per session",
        "returnType": "void"
      },
      {
        "name": "OnRep_TradingPostLevel",
        "returnType": "void"
      },
      {
        "name": "ShouldSkipTutorial",
        "comment": "Returns true if we should skip the tutorial",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "mOnIntroSequenceStateUpdated",
        "comment": "Called when mHasCompletedIntroSequence updates",
        "type": "FIntroSequenceStateUpdate"
      },
      {
        "name": "mTradingPostBuilt",
        "comment": "Has a trading post been built",
        "type": "bool"
      },
      {
        "name": "mIsSkippingIntro",
        "comment": "Set when the player force skips the intro sequence (landing of the pod up until full player control is regained)",
        "type": "bool"
      },
      {
        "name": "mCanIntroBeSkipped",
        "comment": "This is ensures we can only skip during certain parts of the intro sequence",
        "type": "bool"
      },
      {
        "name": "mPendingTutorial",
        "comment": "Array of pending tutorial IDs that should be shown when possible ( no other widgets on screen etc )",
        "type": "EIntroTutorialSteps"
      },
      {
        "name": "mCurrentLocalTutorial",
        "comment": "Array of pending tutorial IDs that should be shown when possible ( no other widgets on screen etc )",
        "type": "EIntroTutorialSteps"
      },
      {
        "name": "mHasCompletedIntroTutorial",
        "comment": "Indicates if the player has completed the introduction tutorial",
        "type": "bool"
      },
      {
        "name": "mHasCompletedIntroSequence",
        "comment": "Indicates that the introduction sequence is done (right now, drop pod sequence)",
        "type": "bool"
      },
      {
        "name": "mTradingPostDescriptor",
        "comment": "The class of the trading post",
        "type": "TSubclassOf<classUFGBuildingDescriptor>"
      },
      {
        "name": "mTradingPost",
        "comment": "Cached reference of trading post",
        "type": "classAFGBuildableTradingPost*"
      },
      {
        "name": "mIntroTutorialData",
        "comment": "Data used for the intro tutorial",
        "type": "TArray<FTutorialHintData>"
      },
      {
        "name": "mIronOreDescriptor",
        "comment": "Class of Iron Resource Descriptor",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "mDidPickUpIronOre",
        "type": "bool"
      },
      {
        "name": "mDropPodItemClass",
        "comment": "An item you receive when dismantling the drop pod so we can identify it",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "mDidDismantleDropPod",
        "comment": "Checks if we have dismantled the drop pod",
        "type": "bool"
      },
      {
        "name": "mStunSpearItemClass",
        "comment": "class to identify the stun spear",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "mDidEquipStunSpear",
        "comment": "Checks if we equipped the stun spear",
        "type": "bool"
      },
      {
        "name": "mStep1UpgradeSchematic",
        "comment": "Reference to the class step 1 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep1Upgrade",
        "comment": "Bool for the step 1 schematic",
        "type": "bool"
      },
      {
        "name": "mStep1_5UpgradeSchematic",
        "comment": "Reference to the class step 1.5 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep1_5Upgrade",
        "comment": "Bool for the step 1.5 schematic",
        "type": "bool"
      },
      {
        "name": "mStep2UpgradeSchematic",
        "comment": "Reference to the class step 2 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep2Upgrade",
        "comment": "Bool for the step 2 schematic",
        "type": "bool"
      },
      {
        "name": "mStep3UpgradeSchematic",
        "comment": "Reference to the class step 3 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep3Upgrade",
        "comment": "Bool for the step 3 schematic",
        "type": "bool"
      },
      {
        "name": "mStep4UpgradeSchematic",
        "comment": "Reference to the class step 4 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep4Upgrade",
        "comment": "Bool for the step 4 schematic",
        "type": "bool"
      },
      {
        "name": "mStep5UpgradeSchematic",
        "comment": "Reference to the class step 5 tutorial schematic",
        "type": "TSubclassOf<classUFGSchematic>"
      },
      {
        "name": "mDidStep5Upgrade",
        "comment": "Bool for the step5 schematic",
        "type": "bool"
      },
      {
        "name": "mStartingPodClass",
        "comment": "Class of drop pod to spawn",
        "type": "TSubclassOf<classAFGStartingPod>"
      },
      {
        "name": "mStartingPod",
        "comment": "Reference to starting pod ( server only )",
        "type": "classAFGStartingPod*"
      },
      {
        "name": "mTradingPostLevel",
        "comment": "The upgrade level we have on our trading post",
        "type": "int32"
      },
      {
        "name": "mWaitTimeAfterCompletingMinorStep",
        "comment": "Time to wait after completing a minor tutorial step and displaying the next",
        "type": "float"
      },
      {
        "name": "mWaitTimeAfterCompletingHubStep",
        "comment": "Time to wait after completing a trading post step and displaying the next",
        "type": "float"
      },
      {
        "name": "mHoldTimeToSkipIntro",
        "comment": "Time required to",
        "type": "float"
      },
      {
        "name": "mHoldToSkipTimerHandle",
        "type": "FTimerHandle"
      },
      {
        "name": "mCurrentStepWaitTime",
        "comment": "Tracks the remaining time until we can start the next step",
        "type": "float"
      },
      {
        "name": "mStartupFrameCounter",
        "comment": "[DavalliusA:Wed/03-04-2019] a way to stop initilization of the start value to trigger effect from changes",
        "type": "uint8"
      },
      {
        "name": "mRecipesToGivePlayersSkippingTutorial",
        "comment": "List of recipes that player should get the items of if the player chooses to skip the tutorial",
        "type": "TArray<FRecipeAmountPair>"
      }
    ]
  }
]