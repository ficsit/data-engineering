[
  {
    "kind": "class",
    "name": "FCategory",
    "category": "USTRUCT",
    "comment": "Copyright 2016 Coffee Stain Studios. All Rights Reserved.",
    "extends": [],
    "methods": [
      {
        "name": "FCategory"
      },
      {
        "name": "FCategory"
      }
    ],
    "properties": [
      {
        "name": "Name",
        "comment": "Localized name of a category",
        "type": "FText"
      },
      {
        "name": "Icon",
        "comment": "Icon for the category",
        "type": "FSlateBrush"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FViscosityToPuddlePair",
    "category": "USTRUCT",
    "extends": [],
    "methods": [
      {
        "name": "FViscosityToPuddlePair"
      }
    ],
    "properties": [
      {
        "name": "Viscosity",
        "comment": "Viscosity for this entry",
        "type": "float"
      },
      {
        "name": "Puddle",
        "comment": "Required puddle amount before this fluid viscosity can be moved from a fluid box [ 0 , 1 ] normalized fill amount",
        "type": "float"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGFactorySettings",
    "category": "UCLASS",
    "comment": "Common settings for the factory buildings and their holograms.",
    "extends": [
      "UFGSettings"
    ],
    "methods": [
      {
        "name": "UFGFactorySettings"
      },
      {
        "name": "GetRandomConstructionSound",
        "comment": "Get a random construction sound to play.",
        "returnType": "classUAkAudioEvent*"
      },
      {
        "name": "GetRandomDismantleSound",
        "comment": "Get a random dismantle sound to play.",
        "returnType": "classUAkAudioEvent*"
      },
      {
        "name": "GetPuddleRequirementForViscosity",
        "comment": "Get the puddle requirement for the given viscosity, see where it is used for more info about the puddeling.",
        "returnType": "float"
      },
      {
        "name": "Get",
        "comment": "Quick accessor to get the singleton instance",
        "returnType": "classUFGFactorySettings*"
      }
    ],
    "properties": [
      {
        "name": "mDefaultValidPlacementMaterial",
        "comment": "Material on hologram for valid placement. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultValidPlacementMaterialSimplified",
        "comment": "Material on hologram for valid placement. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultInvalidPlacementMaterial",
        "comment": "Material on hologram for invalid placement. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultInputConnectionMaterial",
        "comment": "Material on hologram for input connections. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultOutputConnectionMaterial",
        "comment": "Material on hologram for output connections. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultNeutralConnectionMaterial",
        "comment": "Material on hologram for directionally neutral connections. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultPowerConnectionMaterial",
        "comment": "Material on hologram for power connections. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mDefaultConveyorConnectionFrameMesh",
        "comment": "Mesh used to visualize input or output connections location. @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mDefaultConveyorConnectionArrowMesh",
        "comment": "Mesh used to visualize input or output connections direction. @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mDefaultPipeConnectionFrameMesh",
        "comment": "Mesh used to visualize pipeline connections location  @note Do not set in Code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mDefaultPipeConnectionArrowMesh",
        "comment": "Mesh used to visualize pipeline connections direction (Consumer / Producer) @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mDefaultPowerConnectionMesh",
        "comment": "Mesh used to visualize power connections. @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mClearanceMesh",
        "comment": "Mesh used to visualize the clearance mesh on factories @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mClearanceMaterial",
        "comment": "Material on hologram for clearance. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mHologramLoopSound",
        "comment": "Default sound loop placed on holograms.",
        "type": "classUAkAudioEvent*"
      },
      {
        "name": "mHologramSnapSound",
        "comment": "Snapping sound for holograms, e.g. when a conveyor snaps to an output.",
        "type": "classUAkAudioEvent*"
      },
      {
        "name": "mBuildGuideMesh",
        "comment": "Mesh used to visualize alignment in build mode. @note Do not set in code!",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mBuildGuideMaterial",
        "comment": "Material applied to build guides to visualize alignment in build mode. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mConveyorBuildGuideMaterial",
        "comment": "Material applied to build guides specifically for conveyor belts to visualize alignment in build mode. @note Do not set in code!",
        "type": "classUMaterialInstance*"
      },
      {
        "name": "mInventoryDropCrate",
        "comment": "Crate spawned when we dismantle an actor or when we die. It will be filled with the refund if it doesn't fit in the players inventory.",
        "type": "TSubclassOf<classAFGCrate>"
      },
      {
        "name": "mPowerShardClass",
        "comment": "The default class we use for over clocking buildings",
        "type": "TSubclassOf<classUFGItemDescriptor>"
      },
      {
        "name": "mConstructionSounds",
        "comment": "Default sound played when constructing a building, a random from the list is played.",
        "type": "TArray<classUAkAudioEvent*>"
      },
      {
        "name": "mDismantleSounds",
        "comment": "Default sound played when dismantling a building, a random from the list is played.",
        "type": "TArray<classUAkAudioEvent*>"
      },
      {
        "name": "mBuildEffect",
        "comment": "Effect to play when a building is built\n[DavalliusA:Mon/01-04-2019] seems to only be used for replays? //@TODO: see if we can't store this in a way more suitable for replays... a waste to have it in a global class like this",
        "type": "TSubclassOf<classUFGMaterialEffect_Build>"
      },
      {
        "name": "mDismantleEffect",
        "comment": "Effect to play when a building is dismantled\n[DavalliusA:Mon/01-04-2019] seems to never ba used? //@TODO: see if we can't remove this",
        "type": "TSubclassOf<classUFGMaterialEffect_Build>"
      },
      {
        "name": "mDismantlePendingMaterial",
        "comment": "Material used when looking at buildings for dismantle",
        "type": "classUMaterialInterface*"
      },
      {
        "name": "mBuildGunClass",
        "comment": "The default buildgun class to spawn",
        "type": "TSubclassOf<classAFGBuildGun>"
      },
      {
        "name": "mResourceScannerClass",
        "comment": "The default resource scanner class to spawn",
        "type": "TSubclassOf<classAFGResourceScanner>"
      },
      {
        "name": "mResourceMinerClass",
        "comment": "The default resource miner class to spawn",
        "type": "TSubclassOf<classAFGResourceMiner>"
      },
      {
        "name": "mLegMesh",
        "comment": "The mesh to be used as legs on factories",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mFootMesh",
        "comment": "The mesh to be used as foots on factories",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mMaxFeetLength",
        "comment": "Maximum length when we want to spawn the legs",
        "type": "float"
      },
      {
        "name": "mDismantleShortcutClass",
        "comment": "The class we want to spawn for dismantle shortcuts",
        "type": "TSubclassOf<classUFGDismantleShortcut>"
      },
      {
        "name": "mRecipeShortcutClass",
        "comment": "The class we want to spawn for recipe shortcuts",
        "type": "TSubclassOf<classUFGRecipeShortcut>"
      },
      {
        "name": "mShortcutMap",
        "comment": "Names if the input actions that defines the shortcuts. This maps directly to their index (so first entry here should mean that it should call ExecuteShortcut 0)",
        "type": "TArray<FName>"
      },
      {
        "name": "mFluidToInventoryStackRate",
        "comment": "Default rate of converting FluidBox content into inventory stacks. Measured in Liters / Second",
        "type": "int32"
      },
      {
        "name": "mInventoryStackToFluidRate",
        "comment": "Default rate of converting Inventory stacks in to Fluid for FluidBox content. Measured in Liters / Second",
        "type": "int32"
      },
      {
        "name": "mAddedPipeProductionPressure",
        "comment": "Pressure to add to all buildables with a PipeConnection output Fluid Box. This acts as a default pressure as if there was a pump inside every producing buildable.\nThis can be disabled per connection on the PipeConnectionFactory component",
        "type": "float"
      },
      {
        "name": "mViscosityToPuddlePairs",
        "comment": "Float to float pairing the required normalized fill amount [ 0 , 1 ] a pipe must be before it can transfer liquid out for a given viscosity\nHigher viscosities should require more significant puddling to get the feel of sluggishness through pipe segments. Intermediate values will be lerped to.",
        "type": "TArray<FViscosityToPuddlePair>"
      }
    ]
  }
]