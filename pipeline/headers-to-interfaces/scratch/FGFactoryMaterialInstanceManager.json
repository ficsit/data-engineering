[
  {
    "kind": "class",
    "name": "UFGFactoryMaterialInstanceManager",
    "category": "UCLASS",
    "comment": "This should be utilized to share a single DynamicMaterialInstance between skeletal and instance meshes where applicable\nMaterial instances are identified by their name, which is in turn used as the key mapping each material by name to one instance of this class.",
    "extends": [
      "UObject"
    ],
    "methods": [
      {
        "name": "UFGFactoryMaterialInstanceManager",
        "comment": "Constructor, always set the size to match the total number of colors possible"
      },
      {
        "name": "Init",
        "comment": "Preferred Constructor, will initialize list with correct instance colors for a given material interface",
        "returnType": "void"
      },
      {
        "name": "RefreshMaterialColors",
        "comment": "Update the colors on all material instances",
        "returnType": "void"
      },
      {
        "name": "RefreshMaterialColorForIndex",
        "comment": "Update the colors on a material instance for a given index (call when the user changes the Buildable Color array",
        "returnType": "void"
      },
      {
        "name": "SetVectorParameterOnAllInstances",
        "comment": "Set Vector Parameter on all instances",
        "returnType": "void"
      },
      {
        "name": "GetMaterialForIndex",
        "comment": "Returns the material instance for a given color index",
        "returnType": "UMaterialInstanceDynamic*"
      },
      {
        "name": "GetMaterialInstanceNames",
        "returnType": "TArray<FString>&"
      }
    ],
    "properties": [
      {
        "name": "mMaterialInstances",
        "comment": "All materials are the same but their params are set to match the colors specified by the color gun",
        "type": "TArray<UMaterialInstanceDynamic*>"
      },
      {
        "name": "mInstanceNames",
        "type": "TArray<FString>"
      },
      {
        "name": "mCachedBuildSystem",
        "comment": "Hold a reference to the worlds BuildableSubsystem so that we dont have to do look ups / pass world context into function calls\nShould be assigned in constructors where possible. NOT a UPROPERTY because we don't own this object",
        "type": "classAFGBuildableSubsystem*"
      },
      {
        "name": "mCanBeColored",
        "comment": "Is this a colorable material instance?",
        "type": "bool"
      }
    ]
  }
]