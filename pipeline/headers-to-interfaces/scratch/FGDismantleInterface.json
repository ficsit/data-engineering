[
  {
    "kind": "class",
    "name": "UFGDismantleInterface",
    "category": "UINTERFACE",
    "comment": "For blueprint support of the interface, we will never add anything to it, just use it to\nhave a UCLASS to be able to access",
    "extends": [
      "UInterface"
    ],
    "methods": [],
    "properties": []
  },
  {
    "kind": "class",
    "name": "IFGDismantleInterface",
    "comment": "@brief Interface for all \"dismantle-able\" classes out there",
    "extends": [],
    "methods": [
      {
        "name": "CanDismantle",
        "comment": "Can this be dismantled.",
        "returnType": "bool"
      },
      {
        "name": "GetDismantleRefund",
        "comment": "How much do we get back when dismantling this.",
        "returnType": "void"
      },
      {
        "name": "GetRefundSpawnLocationAndArea",
        "comment": "\n @param aimHitLocation - the location we aimed at when dismantling happened\n@param out_radius - radius we want to spawn stuff within",
        "returnType": "FVector"
      },
      {
        "name": "PreUpgrade",
        "comment": "Called prior to dismantle and prior to an upgrade from this actor to another actor.\nUse it to clear connections and other stuff that might interfere with upgrades.",
        "returnType": "void"
      },
      {
        "name": "Upgrade",
        "comment": "Called when an upgrade is performed from this actor to another actor.\n@param newActor  The new actor that replaces this.",
        "returnType": "void"
      },
      {
        "name": "Dismantle",
        "comment": "Dismantle this.",
        "returnType": "void"
      },
      {
        "name": "StartIsLookedAtForDismantle",
        "comment": "Called on by the interface if we are looking at something we can dismantle.",
        "returnType": "void"
      },
      {
        "name": "StopIsLookedAtForDismantle",
        "comment": "Called when we stop looking at the item",
        "returnType": "void"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "FDismantleHelpers",
    "comment": "Shared magic between holograms",
    "extends": [],
    "methods": [
      {
        "name": "DropRefundOnGround",
        "comment": "@param aimHitLocation\tWhere the actor is dismantled, i.e. where on the actor did the player initiate the dismantle action.\n@param refund\t\t\tThe refund to drop.",
        "returnType": "void"
      }
    ],
    "properties": []
  }
]