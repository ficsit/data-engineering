[
  {
    "kind": "class",
    "name": "FWheelsetSetup",
    "category": "USTRUCT",
    "comment": "Vehicle-specific setup for wheelsets and bogies.",
    "extends": [],
    "methods": [
      {
        "name": "FWheelsetSetup"
      }
    ],
    "properties": [
      {
        "name": "BoneName",
        "comment": "Bone name on mesh where the wheelset/bogie is located.",
        "type": "FName"
      },
      {
        "name": "CanSwivel",
        "comment": "Is this wheel set a bogie.",
        "type": "bool"
      },
      {
        "name": "Offset",
        "comment": "Where the axle/swivel center is along the vehicles X axis relative to the root. Calculated from the mesh.",
        "type": "float"
      }
    ]
  },
  {
    "kind": "class",
    "name": "FCouplerSetup",
    "category": "USTRUCT",
    "comment": "Vehicle-specific setup for couplers.",
    "extends": [],
    "methods": [
      {
        "name": "FCouplerSetup"
      }
    ],
    "properties": [
      {
        "name": "BoneName",
        "comment": "Bone name on mesh where the coupler's base is attached.",
        "type": "FName"
      },
      {
        "name": "Length",
        "comment": "How long is the couplers arm, from the bone to the point where is attaches to the other coupler.",
        "type": "float"
      },
      {
        "name": "Offset",
        "comment": "Where the coupler's base is along the vehicles X axis relative to the root. Calculated from the mesh.",
        "type": "float"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGRailroadVehicleMovementComponent",
    "category": "UCLASS",
    "comment": "Base class for all types of rolling stock on the railroad.\nThis is where the physics happen.",
    "extends": [
      "UPawnMovementComponent"
    ],
    "methods": [
      {
        "name": "GetOwningRailroadVehicle",
        "comment": "Get the owning railroad vehicle.",
        "returnType": "classAFGRailroadVehicle*"
      },
      {
        "name": "ComputeConstants",
        "comment": "When vehicle is created we want to precompute some helper data.",
        "returnType": "void"
      },
      {
        "name": "UpdateOrientation",
        "comment": "Called when the consist changes.",
        "returnType": "void"
      },
      {
        "name": "GetMesh",
        "comment": "Get the mesh this vehicle is tied to",
        "returnType": "classUSkinnedMeshComponent*"
      },
      {
        "name": "FixupSkeletalMesh",
        "comment": "Skeletal mesh needs some special handling in the vehicle case",
        "returnType": "void"
      },
      {
        "name": "TickSlaveInput",
        "comment": "Updates the user input and propagates it from the master locomotive.",
        "returnType": "void"
      },
      {
        "name": "TickTractionAndFriction",
        "comment": "Tick the traction and friction forces acting upon this vehicle.",
        "returnType": "void"
      },
      {
        "name": "MoveVehicle",
        "comment": "Move the physics of the vehicle to the new track position.",
        "returnType": "void"
      },
      {
        "name": "UpdateCouplerRotationAndLength",
        "comment": "Updates the coupler rotation and length, called after move vehicle has been called on the whole train.",
        "returnType": "void"
      },
      {
        "name": "GetOrientation",
        "comment": "Get the orientation of this vehicle.",
        "returnType": "float"
      },
      {
        "name": "GetMass",
        "comment": "Get the total mass (gross) of this vehicle, tare + payload. [kg]",
        "returnType": "float"
      },
      {
        "name": "GetTareMass",
        "comment": "Get the unloaded mass of this vehicle, tare. [kg]",
        "returnType": "float"
      },
      {
        "name": "GetPayloadMass",
        "comment": "Get the current payload mass for vehicle. [kg]",
        "returnType": "float"
      },
      {
        "name": "SetPayloadMass",
        "comment": "Set the current payload mass for vehicle. [kg]",
        "returnType": "void"
      },
      {
        "name": "IsMoving",
        "comment": "If this vehicle is moving. Within a small threshold.",
        "returnType": "bool"
      },
      {
        "name": "GetForwardSpeed",
        "comment": "Speed of this vehicle along the track. In the direction of the train. [cm/s]",
        "returnType": "float"
      },
      {
        "name": "GetRelativeForwardSpeed",
        "comment": "Speed of this vehicle in relative to it's orientation. [cm/s]",
        "returnType": "float"
      },
      {
        "name": "GetMaxForwardSpeed",
        "comment": "Arbitrary maximum speed of this vehicle along the track. [cm/s]",
        "returnType": "float"
      },
      {
        "name": "SetForwardSpeed",
        "comment": "Update the speed of this vehicle to be used in calculations. [cm/s]",
        "returnType": "void"
      },
      {
        "name": "GetGravitationalForce",
        "comment": "Get the gravitational force acting on this vehicle. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetTractiveForce",
        "comment": "Get the tractive force for this vehicle, this have a direction. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetResistiveForce",
        "comment": "Get the tractive force for this vehicle, this has no direction. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetGradientForce",
        "comment": "Get the force added by the slope. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetBrakingForce",
        "comment": "Get the force by the dynamic + air brakes, this has no direction. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetAirBrakingForce",
        "comment": "Get air braking force. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetDynamicBrakingForce",
        "comment": "Get dynamic braking force. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetMaxTractiveEffort",
        "comment": "Get maximum tractive force for this vehicle. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetMaxDynamicBrakingEffort",
        "comment": "Get max dynamic braking force. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetMaxAirBrakingEffort",
        "comment": "Get max air braking force. [N] [kg cm/s^2]",
        "returnType": "float"
      },
      {
        "name": "GetTrackGrade",
        "comment": "Slope of the track. [radians]",
        "returnType": "float"
      },
      {
        "name": "GetTrackCurvature",
        "comment": "Expressed as degree of curvature over 30 m. [radians]\n5 degrees means the forward direction (of the track) changes by 5 degrees over 30 m.",
        "returnType": "float"
      },
      {
        "name": "GetWheelsetAngle",
        "comment": "Get the angle of the boogie relative to the locomotive. [radians]",
        "returnType": "float"
      },
      {
        "name": "GetRollingResistance",
        "comment": "Helper functions to get some vehicle force data.",
        "returnType": "float"
      },
      {
        "name": "GetCurvatureResistance",
        "returnType": "float"
      },
      {
        "name": "GetAirResistance",
        "returnType": "float"
      },
      {
        "name": "GetGradientResistance",
        "returnType": "float"
      },
      {
        "name": "OnCreatePhysicsState",
        "comment": "Begin UActorComponent Interface",
        "returnType": "void"
      },
      {
        "name": "OnDestroyPhysicsState",
        "returnType": "void"
      },
      {
        "name": "ShouldCreatePhysicsState",
        "returnType": "bool"
      },
      {
        "name": "HasValidPhysicsState",
        "returnType": "bool"
      },
      {
        "name": "GetNumWheelsets",
        "comment": "Get number of wheel sets",
        "returnType": "int32"
      },
      {
        "name": "GetWheelsetRotation",
        "comment": "Get the rotation for a wheelset.",
        "returnType": "FVector"
      },
      {
        "name": "GetWheelRotation",
        "comment": "Get the rotation for the wheels around the axle. [degrees].",
        "returnType": "float"
      },
      {
        "name": "GetWheelsetOffset",
        "comment": "Get the offset for a wheelset relative to the root bone along the forward (X) axis.",
        "returnType": "float"
      },
      {
        "name": "GetCouplerRotationAndExtention",
        "comment": "Get the couplers rotation for a coupler.",
        "returnType": "FVector"
      },
      {
        "name": "GetCoupledMovementAt",
        "comment": "Get the movement component for the vehicle coupled at the given coupler.",
        "returnType": "UFGRailroadVehicleMovementComponent*"
      },
      {
        "name": "GetDragArea",
        "comment": "Get the drag area for this vehicle.",
        "returnType": "float"
      },
      {
        "name": "CalcCouplerDistance",
        "comment": "Helper to position the couplers.\n@return The distance to the other coupler in local space.",
        "returnType": "FVector"
      }
    ],
    "properties": [
      {
        "name": "mZeroForwardVelocityTolerance",
        "comment": "Threshold for when a train is considered moving",
        "type": "constfloat"
      },
      {
        "name": "mWheelsetSetups",
        "comment": "Wheelsets for this train. Front is 0 and back is 1.",
        "type": "TArray<FWheelsetSetup>"
      },
      {
        "name": "mWheelRadius",
        "comment": "The radius of the wheels. [cm]",
        "type": "float"
      },
      {
        "name": "mCouplerSetups",
        "comment": "Couplers for this train. Front is 0 and back is 1.",
        "type": "TArray<FCouplerSetup>"
      },
      {
        "name": "mWheelsetRotation",
        "comment": "If we have a bogie that swivel then this is its rotation.",
        "type": "TArray<FVector>"
      },
      {
        "name": "mCouplerRotation",
        "comment": "If we have a coupler then this is its target rotation and length.",
        "type": "TArray<FVector>"
      },
      {
        "name": "mCouplerExtention",
        "type": "TArray<float>"
      },
      {
        "name": "mWheelRotation",
        "comment": "The actual rotation of the wheel, same for every wheel in the vehicle. [degrees]",
        "type": "float"
      },
      {
        "name": "mMass",
        "comment": "Mass to set the vehicle chassis to. It's much easier to tweak vehicle settings when\nthe mass doesn't change due to tweaks with the physics asset. [kg]",
        "type": "float"
      },
      {
        "name": "mMaxVelocity",
        "comment": "The self driving code uses this as its maximum speed.\nUseful for cosmetic calculations to get a 0 to 1 range.",
        "type": "float"
      },
      {
        "name": "mPayloadMass",
        "comment": "How much cargo, fuel or other extra weight do we have.",
        "type": "float"
      },
      {
        "name": "mDragCoefficient",
        "comment": "DragCoefficient of the vehicle chassis. Good values [0.4, 0.8].",
        "type": "float"
      },
      {
        "name": "mChassisWidth",
        "comment": "Chassis width used for drag force computation. [cm]",
        "type": "float"
      },
      {
        "name": "mChassisHeight",
        "comment": "Chassis height used for drag force computation. [cm]",
        "type": "float"
      },
      {
        "name": "mRollingResistanceCoefficient",
        "comment": "The rolling resistance coefficient for rolling the wheels along the track. Good values [0.0010, 0.0024].",
        "type": "float"
      },
      {
        "name": "mCurvatureResistanceCoefficient",
        "comment": "The rolling resistance coefficient for rolling the wheels along a curved track. Good values [0.0001, 0.0004].",
        "type": "float"
      },
      {
        "name": "mMaxAirBrakingEffort",
        "comment": "The maximum air braking force that can be delivered. [kN] [kg m/s^2\n 1000]",
        "type": "float"
      },
      {
        "name": "mMaxTractiveEffort",
        "comment": "The maximum tractive force [N] [kg cm/s^2] that can be delivered.",
        "type": "float"
      },
      {
        "name": "mMaxDynamicBrakingEffort",
        "comment": "The maximum dynamic braking force [N] [kg cm/s^2] that can be delivered.",
        "type": "float"
      },
      {
        "name": "mOrientation",
        "comment": "Direction of this vehicle in the consist.",
        "type": "float"
      },
      {
        "name": "mVelocity",
        "comment": "Velocity of this vehicle. [cm/s]",
        "type": "float"
      },
      {
        "name": "mTrackGrade",
        "comment": "Slope of the track. [radians]\nThis is an approximation.",
        "type": "float"
      },
      {
        "name": "mTrackCurvature",
        "comment": "5 degrees means the forward direction (of the track) changes by 5 degrees over 30 m.\nThis is an approximation.",
        "type": "float"
      },
      {
        "name": "mAirBrakePressure",
        "comment": "What is the propagated air brake pressure from the master locomotive, used by railcars. [0,1]",
        "type": "float"
      },
      {
        "name": "mTractiveForce",
        "comment": "The traction force for this vehicle, used for the engines. [N], [kg cm/s^2]",
        "type": "float"
      },
      {
        "name": "mDynamicBrakingForce",
        "comment": "The dynamic braking force that is applied.",
        "type": "float"
      },
      {
        "name": "mAirBrakingForce",
        "comment": "The air braking force that is applied.",
        "type": "float"
      },
      {
        "name": "mAirResistance",
        "comment": "Air resistance at the current speed.",
        "type": "float"
      },
      {
        "name": "mRollingResistance",
        "comment": "Rolling resistance or rolling friction for this vehicle. [N], [kg cm/s^2]",
        "type": "float"
      },
      {
        "name": "mCurvatureResistance",
        "comment": "Additional rolling friction on curved parts of the track. [N], [kg cm/s^2]",
        "type": "float"
      },
      {
        "name": "mGradientResistance",
        "comment": "Force added by tracks gradient, i.e. gravity.",
        "type": "float"
      }
    ]
  }
]