[
  {
    "kind": "class",
    "name": "FNodeClusterData",
    "category": "USTRUCT",
    "comment": "Holds information about resource node clusters. This could be saved in actors on the level for optimization.",
    "extends": [],
    "methods": [
      {
        "name": "FNodeClusterData"
      }
    ],
    "properties": [
      {
        "name": "Nodes",
        "comment": "Cost of schematic if there are more than once item in this array the true cost will be randomly selected.",
        "type": "TArray<classAFGResourceNode*>"
      },
      {
        "name": "MidPoint",
        "comment": "The average location of all the nodes",
        "type": "FVector"
      },
      {
        "name": "ResourceDescriptor",
        "comment": "The resource descriptor of this cluster",
        "type": "TSubclassOf<classUFGResourceDescriptor>"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGResourceScanner",
    "category": "UCLASS",
    "comment": "Locates resources for the player.",
    "extends": [
      "AFGEquipment"
    ],
    "methods": [
      {
        "name": "AFGResourceScanner"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "Tick",
        "returnType": "void"
      },
      {
        "name": "ShouldSaveState",
        "returnType": "bool"
      },
      {
        "name": "PlayClusterEffects",
        "comment": "The function that play effects, sound and particle, in the world at the found node",
        "returnType": "void"
      },
      {
        "name": "ShowResourceDescriptorSelectUI",
        "comment": "Show the resource descriptor selection UI",
        "returnType": "void"
      },
      {
        "name": "CloseResourceDescriptorSelectUI",
        "comment": "Close the resource descriptor selection UI",
        "returnType": "void"
      },
      {
        "name": "GetResourceDescriptorToScanFor",
        "comment": "Returns the current resource descriptor class that we scan for nodes that has",
        "returnType": "TSubclassOf<UFGResourceDescriptor>"
      },
      {
        "name": "GetScannableResources",
        "comment": "Returns the current resource descriptor classes that we should be able to chose from",
        "returnType": "TArray<TSubclassOf<UFGResourceDescriptor>>"
      },
      {
        "name": "SetResourceDescriptorToScanFor",
        "comment": "Set resource descriptor class we should scan for",
        "returnType": "void"
      },
      {
        "name": "UnEquip",
        "comment": "Put the equipment away.",
        "returnType": "void"
      },
      {
        "name": "SetPressingScan",
        "comment": "Sets the status of mIsPressingScan",
        "returnType": "void"
      },
      {
        "name": "Server_ScanReleased",
        "comment": "server notified of when a scanning was made",
        "returnType": "void"
      },
      {
        "name": "ScanReleased",
        "comment": "Scan button released",
        "returnType": "void"
      },
      {
        "name": "AddEquipmentActionBindings",
        "returnType": "void"
      },
      {
        "name": "OnScanPressed",
        "comment": "Key binded functions",
        "returnType": "void"
      },
      {
        "name": "OnScanReleased",
        "returnType": "void"
      },
      {
        "name": "GenerateNodeClusters",
        "comment": "Constructs the list of nodes cluster used when scanning",
        "returnType": "void"
      },
      {
        "name": "GetNodesWithinDistance",
        "comment": "Finds nodes within a radius of the passed node",
        "returnType": "void"
      },
      {
        "name": "OnCheatBoardOpened",
        "comment": "Temp fix for avoiding scanning when opening CheatBoard, function is bound to CheatBoard input",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mResourceDescriptorToScanFor",
        "comment": "This is the resource class to scan for",
        "type": "TSubclassOf<UFGResourceDescriptor>"
      },
      {
        "name": "mNrOfClosestClustersToMark",
        "comment": "How many node clusters should be marked",
        "type": "int32"
      },
      {
        "name": "mLastPressedTimeStamp",
        "comment": "Keeps track of the last time we pressed Scan",
        "type": "float"
      },
      {
        "name": "mHoldDownDurationForUI",
        "comment": "Time needed to hold down the key to show the selection UI",
        "type": "float"
      },
      {
        "name": "mIsPressingScan",
        "comment": "True in between OnScanPressed and OnScanReleased",
        "type": "bool"
      },
      {
        "name": "mIsWaitingForSelectionUI",
        "comment": "True if we are waiting for the selection UI",
        "type": "bool"
      },
      {
        "name": "mDistBetweenNodesInCluster",
        "comment": "If nodes are closer that dist they are considered within the cluster",
        "type": "float"
      },
      {
        "name": "mNodeClusters",
        "comment": "A list of all the clusters of nodes non the level",
        "type": "TArray<FNodeClusterData>"
      }
    ]
  }
]