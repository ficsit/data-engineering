[
  {
    "kind": "class",
    "name": "UFGUseState_ConveyorBeltValid",
    "category": "UCLASS",
    "comment": "Valid state for picking up conveyor belt items.",
    "extends": [
      "UFGUseState"
    ],
    "methods": [
      {
        "name": "UFGUseState_ConveyorBeltValid"
      }
    ],
    "properties": [
      {
        "name": "mItemIndex",
        "comment": "index for the looked at item in mItems",
        "type": "int32"
      },
      {
        "name": "mRepVersion",
        "type": "int8"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGUseState_ConveyorBeltFullInventory",
    "category": "UCLASS",
    "extends": [
      "UFGUseState"
    ],
    "methods": [
      {
        "name": "UFGUseState_ConveyorBeltFullInventory"
      }
    ],
    "properties": [
      {
        "name": "mItemIndex",
        "comment": "index for the looked at item in mItems",
        "type": "int32"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGUseState_ConveyorBeltEmpty",
    "category": "UCLASS",
    "comment": "State for when the belt is empty.",
    "extends": [
      "UFGUseState"
    ],
    "methods": [
      {
        "name": "UFGUseState_ConveyorBeltEmpty"
      }
    ],
    "properties": []
  },
  {
    "kind": "class",
    "name": "AFGBuildableConveyorBelt",
    "category": "UCLASS",
    "comment": "Base for conveyor belts.\nAssumption: Conveyors are never rotated, rotation is always 0,0,0.",
    "extends": [
      "AFGBuildableConveyorBase"
    ],
    "methods": [
      {
        "name": "AFGBuildableConveyorBelt"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "IsComponentRelevantForNavigation",
        "returnType": "bool"
      },
      {
        "name": "UpdateUseState_Implementation",
        "comment": "Begin IFGUseableInterface",
        "returnType": "void"
      },
      {
        "name": "OnUse_Implementation",
        "returnType": "void"
      },
      {
        "name": "OnUseStop_Implementation",
        "returnType": "void"
      },
      {
        "name": "IsUseable_Implementation",
        "returnType": "bool"
      },
      {
        "name": "StartIsLookedAt_Implementation",
        "returnType": "void"
      },
      {
        "name": "StopIsLookedAt_Implementation",
        "returnType": "void"
      },
      {
        "name": "GetLookAtDecription_Implementation",
        "returnType": "FText"
      },
      {
        "name": "GainedSignificance_Implementation",
        "comment": "Begin IFGSignificanceInterface",
        "returnType": "void"
      },
      {
        "name": "LostSignificance_Implementation",
        "returnType": "void"
      },
      {
        "name": "SetupForSignificance",
        "returnType": "void"
      },
      {
        "name": "GetDismantleRefundReturnsMultiplier",
        "comment": "Begin Buildable interface",
        "returnType": "int32"
      },
      {
        "name": "FindOffsetClosestToLocation",
        "comment": "Begin AFGBuildableConveyorBase interface",
        "returnType": "float"
      },
      {
        "name": "GetLocationAndDirectionAtOffset",
        "returnType": "void"
      },
      {
        "name": "GetVelocityForBase",
        "comment": "Get the velocity of the conveyor where the based actor is.",
        "returnType": "FVector"
      },
      {
        "name": "GetRefundSpawnLocationAndArea_Implementation",
        "comment": "~ Begin IFGDismantleInterface",
        "returnType": "FVector"
      },
      {
        "name": "Upgrade_Implementation",
        "returnType": "void"
      },
      {
        "name": "Split",
        "comment": "@param connectNewConveyors - Should the new conveyors be connected to each other after the split\n@return The second part of the splitted conveyor; nullptr on failure to split.",
        "returnType": "TArray<AFGBuildableConveyorBelt*>"
      },
      {
        "name": "Merge",
        "comment": "Merge two conveyors.\n@return The merged conveyor; nullptr on failure to split.",
        "returnType": "AFGBuildableConveyorBelt*"
      },
      {
        "name": "Respline",
        "comment": "Respline a conveyor with the given spline.",
        "returnType": "AFGBuildableConveyorBelt*"
      },
      {
        "name": "GetSplineMesh",
        "comment": "Get the mesh used for this conveyor.",
        "returnType": "UStaticMesh*"
      },
      {
        "name": "GetSplineData",
        "comment": "Get the spline data for this conveyor.",
        "returnType": "TArray<FSplinePointData>"
      },
      {
        "name": "GetSplineComponent",
        "comment": "Returns the spline component",
        "returnType": "classUSplineComponent*"
      },
      {
        "name": "OnUseServerRepInput",
        "returnType": "void"
      },
      {
        "name": "VerifyDefaults",
        "comment": "Begin AFGBuildableFactory interface",
        "returnType": "bool"
      },
      {
        "name": "TickItemTransforms",
        "comment": "Begin AFGBuildableConveyorBase interface",
        "returnType": "void"
      },
      {
        "name": "UpdateItemTransformTick",
        "returnType": "void"
      },
      {
        "name": "GetConveyorMaterials",
        "comment": "Get the that have the \"moving conveyor material\" in it",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mMesh",
        "comment": "Mesh to use for his conveyor.",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mMeshLength",
        "comment": "Length of the mesh to use for this conveyor.",
        "type": "float"
      },
      {
        "name": "mItemMeshMap",
        "comment": "Meshes for items.",
        "type": "TMap<FName,classUInstancedStaticMeshComponent*>"
      },
      {
        "name": "mSplineData",
        "comment": "Compact representation of mSplineComponent, used for replication and save game",
        "type": "TArray<FSplinePointData>"
      },
      {
        "name": "mSplineComponent",
        "comment": "The spline component for this conveyor. Note that this is only the spline.",
        "type": "classUSplineComponent*"
      },
      {
        "name": "mInstancedSplineComponent",
        "comment": "The spline meshes for this train track.",
        "type": "classUFGInstancedSplineMeshComponent*"
      },
      {
        "name": "mSoundSplineComponent",
        "comment": "Wwise multiple position playback for the conveyor spline.",
        "type": "classUFGSoundSplineComponent*"
      },
      {
        "name": "mSplineAudioEvent",
        "comment": "The ak event to post for the sound spline",
        "type": "classUAkAudioEvent*"
      }
    ]
  }
]