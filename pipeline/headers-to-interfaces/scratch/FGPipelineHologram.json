[
  {
    "kind": "class",
    "name": "AFGPipelineHologram",
    "category": "UCLASS",
    "comment": "Hologram for constructing pipelines.",
    "extends": [
      "AFGSplineHologram"
    ],
    "methods": [
      {
        "name": "AFGPipelineHologram"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin AActor Interface",
        "returnType": "void"
      },
      {
        "name": "BeginPlay",
        "returnType": "void"
      },
      {
        "name": "SetHologramLocationAndRotation",
        "comment": "Begin AFGHologram Interface",
        "returnType": "void"
      },
      {
        "name": "RouteSelectedSplineMode",
        "returnType": "void"
      },
      {
        "name": "DoMultiStepPlacement",
        "returnType": "bool"
      },
      {
        "name": "GetBaseCostMultiplier",
        "returnType": "int32"
      },
      {
        "name": "SpawnChildren",
        "returnType": "void"
      },
      {
        "name": "GetSupportedScrollModes",
        "returnType": "void"
      },
      {
        "name": "GetSupportedSplineModes_Implementation",
        "returnType": "void"
      },
      {
        "name": "IsValidHitResult",
        "returnType": "bool"
      },
      {
        "name": "AdjustForGround",
        "returnType": "void"
      },
      {
        "name": "TrySnapToActor",
        "returnType": "bool"
      },
      {
        "name": "OnInvalidHitResult",
        "returnType": "void"
      },
      {
        "name": "Scroll",
        "returnType": "void"
      },
      {
        "name": "CanTakeNextBuildStep",
        "returnType": "bool"
      },
      {
        "name": "SerializeConstructMessage",
        "comment": "Begin FGConstructionMessageInterface",
        "returnType": "void"
      },
      {
        "name": "ClientPreConstructMessageSerialization",
        "returnType": "void"
      },
      {
        "name": "ServerPostConstructMessageDeserialization",
        "returnType": "void"
      },
      {
        "name": "OnPendingConstructionHologramCreated_Implementation",
        "comment": "End FGConstructionMessageInterface",
        "returnType": "void"
      },
      {
        "name": "ResetBuildSteps",
        "comment": "Set point index directly\nvoid SetActivePointIndex( int32 newIndex ){ mActivePointIdx = newIndex; }",
        "returnType": "void"
      },
      {
        "name": "GetLastSplineData",
        "comment": "Returns reference to spline point data",
        "returnType": "void"
      },
      {
        "name": "IsConnectionSnapped",
        "comment": "Checks if we have snapped to any connection",
        "returnType": "bool"
      },
      {
        "name": "SetSnapToGuideLines",
        "returnType": "void"
      },
      {
        "name": "ConfigureActor",
        "comment": "Begin AFGBuildableHologram Interface",
        "returnType": "void"
      },
      {
        "name": "ConfigureComponents",
        "returnType": "void"
      },
      {
        "name": "CheckValidFloor",
        "returnType": "void"
      },
      {
        "name": "CheckClearance",
        "returnType": "void"
      },
      {
        "name": "CheckValidPlacement",
        "returnType": "void"
      },
      {
        "name": "SetupPipeClearanceDetector",
        "comment": "Creates the clearance detector used with Pipelines",
        "returnType": "void"
      },
      {
        "name": "GetChildPoleHologram",
        "returnType": "classAFGPipelineSupportHologram*"
      },
      {
        "name": "GetNumSections",
        "comment": "Get the number of sections this conveyor has. Used for cost, max length etc.",
        "returnType": "int32"
      },
      {
        "name": "UpdateSplineComponent",
        "comment": "Update the spline on the client.",
        "returnType": "void"
      },
      {
        "name": "UpdateConnectionComponentsFromSplineData",
        "returnType": "void"
      },
      {
        "name": "UpdateSplineCompFromSplineData",
        "returnType": "void"
      },
      {
        "name": "AutoRouteSpline",
        "comment": "This routes the spline to the new location. Inserting bends and straights.",
        "returnType": "void"
      },
      {
        "name": "Auto2DRouteSpline",
        "comment": "This routes the spline to the new location. Inserting bends and straights.",
        "returnType": "void"
      },
      {
        "name": "AutoRouteNoodleSpline",
        "returnType": "void"
      },
      {
        "name": "HorizontalAndVerticalRouteSpline",
        "comment": "This routes the spline adding a potential 90 degree vertical rise before reaching the end if the height difference is large enough",
        "returnType": "void"
      },
      {
        "name": "HorizontalAndVerticalRouteSplineNew",
        "returnType": "void"
      },
      {
        "name": "PathFindingRouteSpline",
        "comment": "Path finding route of a spline from start to end location.",
        "returnType": "void"
      },
      {
        "name": "ValidateMinLength",
        "returnType": "bool"
      },
      {
        "name": "ValidateCurvatureAndReturnFaultyPosition",
        "comment": "@return\tfloat - distance along the spline the problem was detected. If 0 or negative, there were no problems",
        "returnType": "float"
      },
      {
        "name": "ValidateFluidRequirements",
        "comment": "Validates any fluid Pipeline specific requirements for allowing placement",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "MINIMUM_PIPE_CLEARANCE",
        "type": "staticconstexprfloat"
      },
      {
        "name": "MINIMUM_HOLOGRAM_LENGTH",
        "type": "staticconstexprfloat"
      },
      {
        "name": "mUsingCutstomPoleRotation",
        "type": "bool"
      },
      {
        "name": "mChildPoleHologram",
        "comment": "Used to redirect input and construct poles when needed",
        "type": "classAFGPipelineSupportHologram*"
      },
      {
        "name": "mConnectionComponents",
        "comment": "The two connection components for this pipeline.",
        "type": "classUFGPipeConnectionComponentBase*"
      },
      {
        "name": "mSnappedConnectionComponents",
        "comment": "The connections we've made.",
        "type": "classUFGPipeConnectionComponentBase*"
      },
      {
        "name": "mDefaultPipelineSupportRecipe",
        "comment": "Class of conveyor pole to place at the end.",
        "type": "TSubclassOf<classUFGRecipe>"
      },
      {
        "name": "mBendRadius",
        "comment": "What radius will the bends have.",
        "type": "float"
      },
      {
        "name": "mBendRadius2D",
        "comment": "What radius will the bends have in the 2D mode AKA conveyor mode. Should be in sync with conveyors.\n@TODO:[DavalliusA:Sun/08-12-2019] should we make something here that can check itself against conveyors to let designers know?",
        "type": "float"
      },
      {
        "name": "mMinBendRadius",
        "comment": "The minimum allowed bend radius before the shape get's invalid",
        "type": "float"
      },
      {
        "name": "mMaxLength",
        "comment": "Maximum number of meshes per pipe",
        "type": "int32"
      },
      {
        "name": "mConnectionArrowComponent",
        "comment": "Arrow to indicate the direction of the conveyor while placing it.",
        "type": "classUStaticMeshComponent*"
      },
      {
        "name": "mPathingGrid",
        "comment": "Struct for generating smart pathing between two connections",
        "type": "structFHologramPathingGrid*"
      },
      {
        "name": "mCanPerformPathing",
        "comment": "Is path finding possible with the given points?",
        "type": "bool"
      },
      {
        "name": "mSplineMeshes",
        "comment": "All the generated spline meshes.",
        "type": "TArray<classUSplineMeshComponent*>"
      },
      {
        "name": "mCollisionMeshes",
        "comment": "All the generated collision meshes.",
        "type": "TArray<classUShapeComponent*>"
      },
      {
        "name": "mMesh",
        "comment": "Cached from the default buildable.",
        "type": "classUStaticMesh*"
      },
      {
        "name": "mMeshLength",
        "type": "float"
      },
      {
        "name": "mPoleSnappedToActor",
        "type": "bool"
      }
    ]
  }
]