[
  {
    "kind": "class",
    "name": "FFGKeyMapping",
    "category": "USTRUCT",
    "comment": "Copyright 2016-2019 Coffee Stain Studios. All Rights Reserved.",
    "extends": [],
    "methods": [
      {
        "name": "FFGKeyMapping"
      }
    ],
    "properties": [
      {
        "name": "ActionKeyMapping",
        "type": "FInputActionKeyMapping"
      },
      {
        "name": "AxisKeyMapping",
        "type": "FInputAxisKeyMapping"
      },
      {
        "name": "IsAxisMapping",
        "type": "bool"
      }
    ]
  },
  {
    "kind": "class",
    "name": "UFGInputLibrary",
    "category": "UCLASS",
    "extends": [
      "UBlueprintFunctionLibrary"
    ],
    "methods": [
      {
        "name": "IsActionMappingUsingSameKeys",
        "comment": "Check if action mappings is using the same relevant keys",
        "returnType": "bool"
      },
      {
        "name": "IsAxisMappingUsingSameKeys",
        "comment": "Check if axis mappings is using the same relevant keys",
        "returnType": "bool"
      },
      {
        "name": "IsActionAndAxisMappingUsingSameKeys",
        "comment": "Check if an action and axis mapping is using the same relevant keys",
        "returnType": "bool"
      },
      {
        "name": "CreateFGKeyMappingStruct",
        "comment": "Create new FG key mapping struct",
        "returnType": "FFGKeyMapping"
      },
      {
        "name": "NullKeyMappingWithSameKeyCombo",
        "comment": "Find and set overlapping key mapping to none",
        "returnType": "void"
      },
      {
        "name": "IsFGKeyMappingAvailable",
        "comment": "Check if a FG key mapping is available",
        "returnType": "bool"
      },
      {
        "name": "IsActionKeyMappingAvailable",
        "comment": "Check if a action key mapping is available",
        "returnType": "bool"
      },
      {
        "name": "IsAxisKeyMappingAvailable",
        "comment": "Check if a axis key mapping is available",
        "returnType": "bool"
      },
      {
        "name": "GetOverlappingKeyMapping",
        "comment": "Returns the key mapping that uses the same relevant keys",
        "returnType": "FFGKeyMapping"
      },
      {
        "name": "RebindKey",
        "comment": "Rebind a key mapping",
        "returnType": "bool"
      },
      {
        "name": "UpdateInputMappings",
        "comment": "Update the provided playercontrollers input mappings",
        "returnType": "void"
      },
      {
        "name": "GetKeyMappingForAction",
        "comment": "Returns the action key mapping for the action we specify",
        "returnType": "FInputActionKeyMapping"
      },
      {
        "name": "GetKeyNameForAction",
        "comment": "Returns readable name for an action",
        "returnType": "FText"
      },
      {
        "name": "GetKeyForAxis",
        "comment": "Returns the FKey for the axis we specify",
        "returnType": "FKey"
      },
      {
        "name": "GetKeyNameForAxis",
        "comment": "Returns readable name for an axis",
        "returnType": "FText"
      },
      {
        "name": "GetAbbreviatedKeyName",
        "comment": "Returns a shortened name for a key",
        "returnType": "FText"
      },
      {
        "name": "FormatStringWithKeyNames",
        "comment": "Replaces action names in the provided text with the corresponding key e.g. ({PrimaryFire} = LMB)",
        "returnType": "FText"
      },
      {
        "name": "IsKeyMappingRelevant",
        "comment": "Check if a key mapping is relevant for rebinding",
        "returnType": "bool"
      }
    ],
    "properties": [
      {
        "name": "IRRELEVANT_PREFIXES",
        "type": "staticconstTArray<FString>"
      }
    ]
  }
]