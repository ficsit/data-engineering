[
  {
    "kind": "class",
    "name": "UFGDotComponent",
    "category": "UCLASS",
    "comment": "Attach this to a PrimtiveComponent (like Box, Mesh or Brush) and the whenever someone is inside this\nshape, then we apply the specified dot to the actors specified in the UFGDamageOverTime class",
    "extends": [
      "USceneComponent"
    ],
    "methods": [
      {
        "name": "UFGDotComponent",
        "comment": "ctor"
      },
      {
        "name": "PostLoad",
        "comment": "~ Begin UObject interface",
        "returnType": "void"
      },
      {
        "name": "OnRegister",
        "comment": "~ Begin ActorComponent interface",
        "returnType": "void"
      },
      {
        "name": "OnUnregister",
        "returnType": "void"
      },
      {
        "name": "Activate",
        "returnType": "void"
      },
      {
        "name": "Deactivate",
        "returnType": "void"
      },
      {
        "name": "CheckForErrors",
        "comment": "~ End ActorComponent interface",
        "returnType": "void"
      },
      {
        "name": "StartDamageTimer",
        "comment": "Start the timer that will damage actors",
        "returnType": "void"
      },
      {
        "name": "OnPrimitiveComponentEntered",
        "comment": "Called whenever a primitive component enters the volume, this triggers check if we should start damage them",
        "returnType": "void"
      },
      {
        "name": "OnPrimitiveComponentExited",
        "comment": "Called whenever a primitive component enters the volume, stop damage them",
        "returnType": "void"
      },
      {
        "name": "DamageContainingActors",
        "comment": "Called by timer to tell us to damage the containing actors",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mDotClass",
        "comment": "The dot we should apply to things in the primitive component we are attached to",
        "type": "TSubclassOf<classUFGDamageOverTime>"
      },
      {
        "name": "mActorsToDamage",
        "comment": "The actors we want to damage",
        "type": "TArray<classAActor*>"
      },
      {
        "name": "mDamageTimerHandle",
        "comment": "handle to keep track of when we want to damage actors",
        "type": "FTimerHandle"
      }
    ]
  }
]