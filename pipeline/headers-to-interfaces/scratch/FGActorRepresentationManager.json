[
  {
    "kind": "class",
    "name": "AFGActorRepresentationManager",
    "category": "UCLASS",
    "comment": "This class manages all the representations of actors that are used in the compass and on the map.",
    "extends": [
      "AFGSubsystem"
    ],
    "methods": [
      {
        "name": "Get",
        "comment": "Get the representation manager, this should always return something unless you call it really early.",
        "returnType": "AFGActorRepresentationManager*"
      },
      {
        "name": "Get",
        "comment": "Get the representation manager from a world context, this should always return something unless you call it really early.",
        "returnType": "AFGActorRepresentationManager*"
      },
      {
        "name": "AFGActorRepresentationManager"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Replication",
        "returnType": "void"
      },
      {
        "name": "PreReplication",
        "returnType": "void"
      },
      {
        "name": "ReplicateSubobjects",
        "returnType": "bool"
      },
      {
        "name": "CreateAndAddNewRepresentation",
        "comment": "Creates a new actor representation. Must be called on server for representation that aren't local to appear for all players.",
        "returnType": "bool"
      },
      {
        "name": "UpdateRepresentation",
        "returnType": "bool"
      },
      {
        "name": "CreateAndAddNewRepresentationNoActor",
        "comment": "Creates a new representation for something that doesn't have an actor. Must be called on server for representations that aren't local to appear for all players.",
        "returnType": "bool"
      },
      {
        "name": "RemoveRepresentationOfActor",
        "comment": "Removes the representation of an actor",
        "returnType": "bool"
      },
      {
        "name": "GetAllActorRepresentations",
        "comment": "Gathers all representations and returns them",
        "returnType": "void"
      },
      {
        "name": "DumpActorRepresentations",
        "comment": "Debug",
        "returnType": "void"
      },
      {
        "name": "SetMapRepresentationTypeFilter",
        "comment": "Set if representation type should be visible on map",
        "returnType": "void"
      },
      {
        "name": "SetCompassRepresentationTypeFilter",
        "comment": "Set if representation type should be visible on compass",
        "returnType": "void"
      },
      {
        "name": "GetMapRepresentationTypeFilter",
        "comment": "Returns true if representation type is visible on map",
        "returnType": "bool"
      },
      {
        "name": "GetCompassRepresentationTypeFilter",
        "comment": "Returns true if representation type is visible on compass",
        "returnType": "bool"
      },
      {
        "name": "SetCompassViewDistanceForActorRepresentation",
        "comment": "Sets the actor representations view distance on compass",
        "returnType": "void"
      },
      {
        "name": "GetRealActorFromActorRepresentation",
        "returnType": "AActor*"
      },
      {
        "name": "GetDistanceValueFromCompassViewDistance",
        "returnType": "float"
      },
      {
        "name": "Tick",
        "comment": "Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "OnRep_ReplicatedRepresentations",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mOnActorRepresentationAdded",
        "comment": "Called whenever a new representation is added",
        "type": "FOnActorRepresentationAdded"
      },
      {
        "name": "mOnActorRepresentationRemoved",
        "comment": "Called whenever a new representation is removed, not sure how long it will be valid after a remove.",
        "type": "FOnActorRepresentationRemoved"
      },
      {
        "name": "mOnActorRepresentationUpdated",
        "comment": "Called whenever a representation is updated",
        "type": "FOnActorRepresentationUpdated"
      },
      {
        "name": "mOnActorRepresentationUpdatedCompassShow",
        "comment": "Called whenever a new representation changes it's show value for the compass",
        "type": "FOnActorRepresentationUpdatedCompassShow"
      },
      {
        "name": "mOnActorRepresentationUpdatedMapShow",
        "comment": "Called whenever a new representation changes it's show value for the maps",
        "type": "FOnActorRepresentationUpdatedMapShow"
      },
      {
        "name": "mOnActorRepresentationTypeFilteredOnMap",
        "comment": "Called whenever a representation type changes it's filter status on the map",
        "type": "FOnActorRepresentationTypeFilteredOnMap"
      },
      {
        "name": "mOnActorRepresentationTypeFilteredOnCompass",
        "comment": "Called whenever a representation type changes it's filter status on the compass",
        "type": "FOnActorRepresentationTypeFilteredOnCompass"
      },
      {
        "name": "mReplicatedRepresentations",
        "comment": "These are all the representations of actors that should replicate from server to clients",
        "type": "TArray<classUFGActorRepresentation*>"
      },
      {
        "name": "mClientReplicatedRepresentations",
        "comment": "Simulated on client to keep track of added and removed representations",
        "type": "TArray<UFGActorRepresentation*>"
      },
      {
        "name": "mLocalRepresentations",
        "comment": "These are representation that the local player adds for them selves, often temporary stuff that others shouldn't see",
        "type": "TArray<UFGActorRepresentation*>"
      }
    ]
  }
]