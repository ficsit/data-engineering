[
  {
    "kind": "class",
    "name": "AFGRenderTargetStage",
    "category": "UCLASS",
    "extends": [
      "AActor"
    ],
    "methods": [
      {
        "name": "AFGRenderTargetStage",
        "comment": "Ctor"
      },
      {
        "name": "BeginPlay",
        "comment": "~ Begin AActor interface",
        "returnType": "void"
      },
      {
        "name": "BeginCapture",
        "comment": "Starts the rendering of the rendertarget scene\n",
        "returnType": "void"
      },
      {
        "name": "EndCapture",
        "comment": "Stops the rendering of the rendertarget scene\n",
        "returnType": "void"
      },
      {
        "name": "CaptureOnce",
        "comment": "Capture a picture once",
        "returnType": "void"
      },
      {
        "name": "SetRenderTargetFormat",
        "comment": "@param pixelFormat - pixelformat of rendertarget (valid are PF_B8G8R8A8, PF_A16B16G16R16 if you want to be able to convert the to static textures)\n",
        "returnType": "void"
      },
      {
        "name": "GetStage",
        "comment": "Get the stage of this preview scene",
        "returnType": "classUSceneComponent*"
      },
      {
        "name": "UpdateRenderedComponents",
        "comment": "Call this when you have attached/detached components from our stage, this will make sure only they get rendered",
        "returnType": "void"
      },
      {
        "name": "SetPreviewDistance",
        "comment": "Set the distance we want to preview the stage from",
        "returnType": "void"
      },
      {
        "name": "SetView",
        "comment": "Move the camera so it looks at the stage from this view",
        "returnType": "void"
      },
      {
        "name": "GetRenderTarget",
        "comment": "Get the render target that this stage renders to",
        "returnType": "classUTextureRenderTarget2D*"
      }
    ],
    "properties": [
      {
        "name": "mDynamicRenderTargetSizeX",
        "comment": "If we create a dynamic render target (that is, a new one every time), then this is it's x size",
        "type": "int32"
      },
      {
        "name": "mDynamicRenderTargetSizeY",
        "comment": "If we create a dynamic render target (that is, a new one every time), then this is it's y size",
        "type": "int32"
      },
      {
        "name": "mDynamicPixelFormat",
        "comment": "Set the pixel format of a dynamic rendertarget",
        "type": "TEnumAsByte<EPixelFormat>"
      },
      {
        "name": "mSceneCaptureComponent",
        "comment": "The scene captor component that will generate the result of our render target",
        "type": "classUSceneCaptureComponent2D*"
      },
      {
        "name": "mStage",
        "comment": "they get set\n",
        "type": "classUSceneComponent*"
      },
      {
        "name": "mDynamicRenderTarget",
        "comment": "If true, then we create our own render target every time we want to play",
        "type": "uint8"
      }
    ]
  }
]