[
  {
    "kind": "enum",
    "name": "ETrainPlatformDockingStatus",
    "comment": "Copyright 2016-2019 Coffee Stain Studios. All Rights Reserved.",
    "entries": [
      {
        "name": "ETPDS_None",
        "displayName": "None"
      },
      {
        "name": "ETPDS_WaitingToStart",
        "displayName": "WaitingToStart"
      },
      {
        "name": "ETPDS_Loading",
        "displayName": "Loading"
      },
      {
        "name": "ETPDS_Unloading",
        "displayName": "Unloading"
      },
      {
        "name": "ETPDS_WaitingForTransfer",
        "displayName": "WaitingTransfer"
      },
      {
        "name": "ETPDS_Complete",
        "displayName": "Complete"
      }
    ]
  },
  {
    "kind": "class",
    "name": "AFGBuildableTrainPlatform",
    "category": "UCLASS",
    "comment": "Base class for any train platform (station, cargo loading, empty etc. )",
    "extends": [
      "AFGBuildableFactory"
    ],
    "methods": [
      {
        "name": "AFGBuildableTrainPlatform"
      },
      {
        "name": "GetLifetimeReplicatedProps",
        "comment": "Begin Actor interface",
        "returnType": "void"
      },
      {
        "name": "PreSaveGame_Implementation",
        "comment": "Begin save interface",
        "returnType": "void"
      },
      {
        "name": "PostLoadGame_Implementation",
        "returnType": "void"
      },
      {
        "name": "CanDismantle_Implementation",
        "comment": "Begin IFGDismantlableInterface",
        "returnType": "bool"
      },
      {
        "name": "Dismantle_Implementation",
        "returnType": "void"
      },
      {
        "name": "GetDismantleRefund_Implementation",
        "returnType": "void"
      },
      {
        "name": "IsUseable_Implementation",
        "comment": "~ Begin IFGUseableInterface",
        "returnType": "bool"
      },
      {
        "name": "GetTrackPosition",
        "comment": "@todotrains Get rid of the dependency on track position in platforms.",
        "returnType": "FRailroadTrackPosition"
      },
      {
        "name": "GetTrackGraphID",
        "returnType": "int32"
      },
      {
        "name": "GetConnectedPlatformInDirectionOf",
        "comment": "@param direction - 0 or 1\n@info this can be null if the platform in the specified direction does not exist",
        "returnType": "AFGBuildableTrainPlatform*"
      },
      {
        "name": "NotifyTrainDocked",
        "comment": "When a locomotive docks it will call this on relevant children in the direction of its output. It is up to the platform to decide how to act",
        "returnType": "void"
      },
      {
        "name": "IsOrientationReversed",
        "comment": "Is this platform reversed?",
        "returnType": "bool"
      },
      {
        "name": "GetDockingStatus",
        "returnType": "ETrainPlatformDockingStatus"
      },
      {
        "name": "UpdateDockingSequence",
        "comment": "Timer Sequence Function to progress and handle all logic for docking\nWhen a platform is docked, a timer handle is created that updates the dock sequence until its completion that calls this function each step",
        "returnType": "void"
      },
      {
        "name": "SetupRailroadTrack",
        "comment": "his needs to happed from the hologram and from begin play",
        "returnType": "void"
      },
      {
        "name": "FinishDockingSequence",
        "comment": "Call to clear all docking related properties, overrides should always call super",
        "returnType": "void"
      },
      {
        "name": "OnRep_UpdateDockingStatus",
        "comment": "Update the docking status of Clients",
        "returnType": "void"
      },
      {
        "name": "ReverseConnectionDirections",
        "comment": "Used by the hologram to configure this platform.",
        "returnType": "void"
      },
      {
        "name": "AssignRailroadTrack",
        "returnType": "void"
      }
    ],
    "properties": [
      {
        "name": "mRailroadTrack",
        "type": "classAFGBuildableRailroadTrack*"
      },
      {
        "name": "mPlatformConnections",
        "comment": "They are individual components so that they appear correctly in the blueprint editor. If anyone sees this and knows a way to make containers\nof components be editable when inherited @me (dylan)",
        "type": "TArray<classUFGTrainPlatformConnection*>"
      },
      {
        "name": "mPlatformConnection0",
        "type": "classUFGTrainPlatformConnection*"
      },
      {
        "name": "mPlatformConnection1",
        "type": "classUFGTrainPlatformConnection*"
      },
      {
        "name": "mDockedRailroadVehicle",
        "type": "classAFGRailroadVehicle*"
      },
      {
        "name": "mStationDockingMaster",
        "comment": "Stores a reference to the station that initiated a docking sequence. Used to notify the station that we have completed",
        "type": "classAFGBuildableRailroadStation*"
      },
      {
        "name": "mIsOrientationReversed",
        "comment": "Is this platform reversed from its attached station?",
        "type": "bool"
      },
      {
        "name": "mPlatformDockingStatus",
        "comment": "Where are we in the docking status. Updated by the mDockingSequenceTimer which is set by NotifyTrainDocked",
        "type": "ETrainPlatformDockingStatus"
      },
      {
        "name": "mSavedDockingStatus",
        "comment": "The save state value to write for the stations docking status. It is modified in presave to force a docking reset if saved part way through.\nHowever since it also drives the anim blueprint undesired anim starts are triggered if we save / modify the actually used mPlatformDockingStatus",
        "type": "ETrainPlatformDockingStatus"
      },
      {
        "name": "mDockingSequenceTimerHandle",
        "comment": "Timer handle that is set and retriggered over the course of a docking sequence",
        "type": "FTimerHandle"
      }
    ]
  }
]